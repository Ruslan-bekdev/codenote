{"version":3,"file":"templates-CCWEh9b2.js","sources":["../../src/dataBase/templates.js"],"sourcesContent":["export default {\r\n    title: \"Шаблоны\",\r\n    navTitle: \"Шаблоны\",\r\n    id: \"templates\",\r\n    items: [\r\n        {\r\n            summary: \"Шаблон Секции для Коднота\",\r\n            content: \"export default {\\n\" +\r\n                \"    title: \\\"\\\",\\n\" +\r\n                \"    navTitle: \\\"\\\",\\n\" +\r\n                \"    id: \\\"\\\",\\n\" +\r\n                \"    items: [\\n\" +\r\n                \"        {\\n\" +\r\n                \"            summary: \\\"\\\",\\n\" +\r\n                \"            content: \\\"\\\"\\n\" +\r\n                \"        },\\n\" +\r\n                \"    ]\\n\" +\r\n                \"}\"\r\n        },\r\n        {\r\n          summary: 'Zoomable Image (styled components, useState)',\r\n          content: 'import React, { useState } from \\'react\\';\\n' +\r\n              'import styled from \"styled-components\";\\n' +\r\n              'import {flexCenter, imageDefault} from \"../../styles/styles\";\\n' +\r\n              '\\n' +\r\n              'const Modal = styled.div`\\n' +\r\n              '  position: relative;\\n' +\r\n              '  display: inline-block;\\n' +\r\n              '  cursor: zoom-in;\\n' +\r\n              '  .modal__image{\\n' +\r\n              '    position: fixed;\\n' +\r\n              '    top: 50%;\\n' +\r\n              '    left: 50%;\\n' +\r\n              '    transform: translate(-50%, -50%);\\n' +\r\n              '    width: 90vw;\\n' +\r\n              '    height: 90vh;\\n' +\r\n              '    ${flexCenter};\\n' +\r\n              '    z-index: 30;\\n' +\r\n              '    img{\\n' +\r\n              '      object-fit: contain;\\n' +\r\n              '      ${imageDefault};\\n' +\r\n              '    }\\n' +\r\n              '  }\\n' +\r\n              '`;\\n' +\r\n              '\\n' +\r\n              'const Overlay = styled.div`\\n' +\r\n              '  position: fixed;\\n' +\r\n              '  top: 0;\\n' +\r\n              '  left: 0;\\n' +\r\n              '  width: 100vw;\\n' +\r\n              '  height: 100vh;\\n' +\r\n              '  background-color: rgba(0, 0, 0, 0.8);\\n' +\r\n              '  cursor: zoom-out;\\n' +\r\n              '  ${flexCenter};\\n' +\r\n              '  z-index: 20;\\n' +\r\n              '`;\\n' +\r\n              '\\n' +\r\n              'const ZoomableImage = ({src, alt, className = \\'\\'}) => {\\n' +\r\n              '    const [zoomed, setZoomed] = useState(false);\\n' +\r\n              '\\n' +\r\n              '    const handleZoomToggle = () => {\\n' +\r\n              '        setZoomed(!zoomed);\\n' +\r\n              '    };\\n' +\r\n              '\\n' +\r\n              '    return (\\n' +\r\n              '        <Modal\\n' +\r\n              '            className={className}\\n' +\r\n              '            onClick={handleZoomToggle}\\n' +\r\n              '        >\\n' +\r\n              '            <img\\n' +\r\n              '                src={src}\\n' +\r\n              '                alt={alt}\\n' +\r\n              '            />\\n' +\r\n              '            {\\n' +\r\n              '                zoomed &&\\n' +\r\n              '                <Overlay\\n' +\r\n              '                    onClick={handleZoomToggle}\\n' +\r\n              '                >\\n' +\r\n              '                    <div className=\\'modal__image\\'>\\n' +\r\n              '                        <img src={src} alt={alt}/>\\n' +\r\n              '                    </div>\\n' +\r\n              '                </Overlay>\\n' +\r\n              '            }\\n' +\r\n              '        </Modal>\\n' +\r\n              '    );\\n' +\r\n              '};\\n' +\r\n              '\\n' +\r\n              'export default ZoomableImage;' +\r\n              '\\n\\n' +\r\n              'Стили от styled components:\\n' +\r\n              'export const flexCenter = css`\\n' +\r\n              '    display: flex;\\n' +\r\n              '    align-items: center;\\n' +\r\n              '    justify-content: center;\\n' +\r\n              '`;\\n' +\r\n              'export const imageDefault = css`\\n' +\r\n              '    width: auto;\\n' +\r\n              '    height: auto;\\n' +\r\n              '    max-width: 100%;\\n' +\r\n              '    max-height: 100%;\\n' +\r\n              '`;' +\r\n              '\\n\\n' +\r\n              '' +\r\n              'ВАНИЛА:\\n' +\r\n              'import React, { useState } from \\'react\\';\\n' +\r\n              'import styles from \\'./ZoomableImage.module.css\\';\\n' +\r\n              '\\n' +\r\n              'const ZoomableImage = ({ src, alt, className = \\'\\' }) => {\\n' +\r\n              '    const [zoomed, setZoomed] = useState(false);\\n' +\r\n              '\\n' +\r\n              '    const handleZoomToggle = () => {\\n' +\r\n              '        setZoomed(!zoomed);\\n' +\r\n              '    };\\n' +\r\n              '\\n' +\r\n              '    return (\\n' +\r\n              '        <div\\n' +\r\n              '            className={`${styles.modal} ${className}`}\\n' +\r\n              '            onClick={handleZoomToggle}\\n' +\r\n              '        >\\n' +\r\n              '            <img\\n' +\r\n              '                src={src}\\n' +\r\n              '                alt={alt}\\n' +\r\n              '            />\\n' +\r\n              '            {zoomed && (\\n' +\r\n              '                <div className={styles.overlay} onClick={handleZoomToggle}>\\n' +\r\n              '                    <div className={styles.modalImage}>\\n' +\r\n              '                        <img src={src} alt={alt} />\\n' +\r\n              '                    </div>\\n' +\r\n              '                </div>\\n' +\r\n              '            )}\\n' +\r\n              '        </div>\\n' +\r\n              '    );\\n' +\r\n              '};\\n' +\r\n              '\\n' +\r\n              'export default ZoomableImage;\\n\\n' +\r\n              '.flexCenter {\\n' +\r\n              '    display: flex;\\n' +\r\n              '    align-items: center;\\n' +\r\n              '    justify-content: center;\\n' +\r\n              '}\\n' +\r\n              '\\n' +\r\n              '.imageDefault {\\n' +\r\n              '    width: auto;\\n' +\r\n              '    height: auto;\\n' +\r\n              '    max-width: 100%;\\n' +\r\n              '    max-height: 100%;\\n' +\r\n              '}\\n' +\r\n              '\\n' +\r\n              '.modal {\\n' +\r\n              '    position: relative;\\n' +\r\n              '    display: inline-block;\\n' +\r\n              '    cursor: zoom-in;\\n' +\r\n              '}\\n' +\r\n              '\\n' +\r\n              '.modalImage {\\n' +\r\n              '    position: fixed;\\n' +\r\n              '    top: 50%;\\n' +\r\n              '    left: 50%;\\n' +\r\n              '    transform: translate(-50%, -50%);\\n' +\r\n              '    width: 90vw;\\n' +\r\n              '    height: 90vh;\\n' +\r\n              '    z-index: 30;\\n' +\r\n              '}\\n' +\r\n              '.modalImage img {\\n' +\r\n              '    object-fit: contain;\\n' +\r\n              '    composes: imageDefault;\\n' +\r\n              '}\\n' +\r\n              '\\n' +\r\n              '.overlay {\\n' +\r\n              '    position: fixed;\\n' +\r\n              '    top: 0;\\n' +\r\n              '    left: 0;\\n' +\r\n              '    width: 100vw;\\n' +\r\n              '    height: 100vh;\\n' +\r\n              '    background-color: rgba(0, 0, 0, 0.8);\\n' +\r\n              '    cursor: zoom-out;\\n' +\r\n              '    z-index: 20;\\n' +\r\n              '    composes: flexCenter;\\n' +\r\n              '}\\n'\r\n        },\r\n        {\r\n          summary: 'css шаблоны STYLED COMPONENTS или MUI',\r\n          content: 'import {css} from \"styled-components\";\\n' +\r\n              'ИЛИ\\n' +\r\n              'import { css } from \\'@emotion/react\\';\\n' +\r\n              '\\n' +\r\n              'export const media = {\\n' +\r\n              '  mobile: (...args) => css`\\n' +\r\n              '    @media only screen and (max-width: 767px) {\\n' +\r\n              '      ${css(...args)}\\n' +\r\n              '    }\\n' +\r\n              '  `,\\n' +\r\n              '  tablet: (...args) => css`\\n' +\r\n              '    @media only screen and (min-width: 767px) and (max-width: 991px) {\\n' +\r\n              '      ${css(...args)}\\n' +\r\n              '    }\\n' +\r\n              '  `,\\n' +\r\n              '  laptop: (...args) => css`\\n' +\r\n              '    @media only screen and (min-width: 991px) and (max-width: 1200px) {\\n' +\r\n              '      ${css(...args)}\\n' +\r\n              '    }\\n' +\r\n              '  `,\\n' +\r\n              '  desktop: (...args) => css`\\n' +\r\n              '    @media only screen and (min-width: 1200px) {\\n' +\r\n              '      ${css(...args)}\\n' +\r\n              '    }\\n' +\r\n              '  `,\\n' +\r\n              '};\\n' +\r\n              '\\n' +\r\n              'export const colors = {\\n' +\r\n              '  main: \\'#351C0F\\',\\n' +\r\n              '  mainRGB: \\'53,28,15\\',\\n' +\r\n              '  secondary: \\'#E9E9E9\\',\\n' +\r\n              '  secondaryRGB: \\'233,233,233\\',\\n' +\r\n              '  accent: \\'#FF5733\\',\\n' +\r\n              '  accentRGB: \\'255,87,51\\',\\n' +\r\n              '  background: \\'#F0F0F0\\',\\n' +\r\n              '  backgroundRGB: \\'240,240,240\\',\\n' +\r\n              '};\\n' +\r\n              '\\n' +\r\n              'export const headerHeight = {\\n' +\r\n              '  mobile: \\'3rem\\',\\n' +\r\n              '  tablet: \\'4rem\\',\\n' +\r\n              '  laptop: \\'5rem\\',\\n' +\r\n              '  desktop: \\'6rem\\',\\n' +\r\n              '  ultraWide: \\'7rem\\',\\n' +\r\n              '};\\n' +\r\n              '\\n' +\r\n              'export const container = css`\\n' +\r\n              '  width: 100vw;\\n' +\r\n              '  max-width: 90vw;\\n' +\r\n              '  margin-inline: auto;\\n' +\r\n              '  text-align: center;\\n' +\r\n              '  box-sizing: border-box;\\n' +\r\n              '  padding: 1rem;\\n' +\r\n              '`;\\n' +\r\n              '\\n' +\r\n              'export const imageDefault = css`\\n' +\r\n              '  width: auto;\\n' +\r\n              '  height: auto;\\n' +\r\n              '  max-width: 100%;\\n' +\r\n              '  max-height: 100%;\\n' +\r\n              '  border-radius: 0.5rem;\\n' +\r\n              '`;\\n' +\r\n              '\\n' +\r\n              '// Флекс позиционирование\\n' +\r\n              'export const justifyCenter_around = css`\\n' +\r\n              '  display: flex;\\n' +\r\n              '  align-items: center;\\n' +\r\n              '  justify-content: space-around;\\n' +\r\n              '`;\\n' +\r\n              '\\n' +\r\n              'export const justifyCenter_between = css`\\n' +\r\n              '  display: flex;\\n' +\r\n              '  align-items: center;\\n' +\r\n              '  justify-content: space-between;\\n' +\r\n              '`;\\n' +\r\n              '\\n' +\r\n              'export const justifyEnd_between = css`\\n' +\r\n              '  display: flex;\\n' +\r\n              '  align-items: end;\\n' +\r\n              '  justify-content: space-between;\\n' +\r\n              '`;\\n' +\r\n              '\\n' +\r\n              'export const flexCenter = css`\\n' +\r\n              '  display: flex;\\n' +\r\n              '  align-items: center;\\n' +\r\n              '  justify-content: center;\\n' +\r\n              '`;\\n' +\r\n              '\\n' +\r\n              'export const flexCenter_wrap = css`\\n' +\r\n              '  display: flex;\\n' +\r\n              '  align-items: center;\\n' +\r\n              '  justify-content: center;\\n' +\r\n              '  flex-wrap: wrap;\\n' +\r\n              '`;\\n' +\r\n              '\\n' +\r\n              'export const flexCenter_column = css`\\n' +\r\n              '  display: flex;\\n' +\r\n              '  align-items: center;\\n' +\r\n              '  justify-content: center;\\n' +\r\n              '  flex-direction: column;\\n' +\r\n              '`;\\n' +\r\n              '\\n' +\r\n              'export const flexStart = css`\\n' +\r\n              '  display: flex;\\n' +\r\n              '  align-items: center;\\n' +\r\n              '  justify-content: flex-start;\\n' +\r\n              '`;\\n' +\r\n              '\\n' +\r\n              'export const flexEnd = css`\\n' +\r\n              '  display: flex;\\n' +\r\n              '  align-items: center;\\n' +\r\n              '  justify-content: flex-end;\\n' +\r\n              '`;\\n' +\r\n              '\\n' +\r\n              'export const flexSpaceEvenly = css`\\n' +\r\n              '  display: flex;\\n' +\r\n              '  justify-content: space-evenly;\\n' +\r\n              '  align-items: center;\\n' +\r\n              '`;\\n' +\r\n              '\\n' +\r\n              '// Остальное позиционирование\\n' +\r\n              'export const center_relative = css`\\n' +\r\n              '  position: relative;\\n' +\r\n              '  top: 50%;\\n' +\r\n              '  left: 50%;\\n' +\r\n              '  transform: translate(-50%, -50%);\\n' +\r\n              '`;\\n' +\r\n              '\\n' +\r\n              'export const bottomStart_relative = css`\\n' +\r\n              '  position: relative;\\n' +\r\n              '  bottom: 0;\\n' +\r\n              '  left: 0;\\n' +\r\n              '`;\\n' +\r\n              '\\n' +\r\n              'export const center_absolute = css`\\n' +\r\n              '  position: absolute;\\n' +\r\n              '  top: 50%;\\n' +\r\n              '  left: 50%;\\n' +\r\n              '  transform: translate(-50%, -50%);\\n' +\r\n              '`;\\n' +\r\n              '\\n' +\r\n              'export const centerY_relative = css`\\n' +\r\n              '  position: relative;\\n' +\r\n              '  top: 50%;\\n' +\r\n              '  transform: translateY(-50%);\\n' +\r\n              '`;\\n' +\r\n              '\\n' +\r\n              'export const centerY_absolute = css`\\n' +\r\n              '  position: absolute;\\n' +\r\n              '  top: 50%;\\n' +\r\n              '  transform: translateY(-50%);\\n' +\r\n              '`;\\n' +\r\n              '\\n' +\r\n              'export const bottomStart_fixed = css`\\n' +\r\n              '  position: fixed;\\n' +\r\n              '  bottom: 0;\\n' +\r\n              '  left: 0;\\n' +\r\n              '`;\\n' +\r\n              '\\n' +\r\n              'export const center_fixed = css`\\n' +\r\n              '  position: fixed;\\n' +\r\n              '  top: 50%;\\n' +\r\n              '  left: 50%;\\n' +\r\n              '  transform: translate(-50%, -50%);\\n' +\r\n              '`;\\n' +\r\n              '\\n' +\r\n              'export const start_relative = css`\\n' +\r\n              '  position: relative;\\n' +\r\n              '  top: 0;\\n' +\r\n              '  left: 0;\\n' +\r\n              '`;\\n' +\r\n              '\\n' +\r\n              'export const start_absolute = css`\\n' +\r\n              '  position: absolute;\\n' +\r\n              '  top: 0;\\n' +\r\n              '  left: 0;\\n' +\r\n              '`;\\n' +\r\n              '\\n' +\r\n              'export const start_fixed = css`\\n' +\r\n              '  position: fixed;\\n' +\r\n              '  top: 0;\\n' +\r\n              '  left: 0;\\n' +\r\n              '`;\\n' +\r\n              '\\n' +\r\n              'export const borderBox = css`\\n' +\r\n              '  box-sizing: border-box;\\n' +\r\n              '`;\\n' +\r\n              '\\n' +\r\n              'export const card = css`\\n' +\r\n              '  ${borderBox};\\n' +\r\n              '  border: 1px solid ${colors.secondary};\\n' +\r\n              '  background-color: ${colors.background};\\n' +\r\n              '  border-radius: 8px;\\n' +\r\n              '  padding: 1rem;\\n' +\r\n              '  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\\n' +\r\n              '`;\\n' +\r\n              '\\n' +\r\n              'export const buttonPrimary = css`\\n' +\r\n              '  ${flexCenter};\\n' +\r\n              '  padding: 0.5rem 1rem;\\n' +\r\n              '  background-color: ${colors.accent};\\n' +\r\n              '  color: #fff;\\n' +\r\n              '  border: none;\\n' +\r\n              '  border-radius: 4px;\\n' +\r\n              '  cursor: pointer;\\n' +\r\n              '  transition: background-color 0.3s ease;\\n' +\r\n              '\\n' +\r\n              '  &:hover {\\n' +\r\n              '    background-color: darken(${colors.accent}, 10%);\\n' +\r\n              '  }\\n' +\r\n              '`;\\n'\r\n        },\r\n        {\r\n            summary: 'css шаблоны VANILLA MODULE CSS',\r\n            content: '/* colors.css */\\n' +\r\n                ':root {\\n' +\r\n                '  --main-color: #351C0F;\\n' +\r\n                '  --main-rgb: 53, 28, 15;\\n' +\r\n                '  --secondary-color: #E9E9E9;\\n' +\r\n                '  --secondary-rgb: 233, 233, 233;\\n' +\r\n                '  --accent-color: #FF5733;\\n' +\r\n                '  --accent-rgb: 255, 87, 51;\\n' +\r\n                '  --background-color: #F0F0F0;\\n' +\r\n                '  --background-rgb: 240, 240, 240;\\n' +\r\n                '  --header-height-mobile: 3rem;\\n' +\r\n                '  --header-height-tablet: 4rem;\\n' +\r\n                '  --header-height-laptop: 5rem;\\n' +\r\n                '  --header-height-desktop: 6rem;\\n' +\r\n                '  --header-height-ultrawide: 7rem;\\n' +\r\n                '}\\n' +\r\n                '\\n' +\r\n                '/* flex.css */\\n' +\r\n                '.flex-center {\\n' +\r\n                '  display: flex;\\n' +\r\n                '  align-items: center;\\n' +\r\n                '  justify-content: center;\\n' +\r\n                '}\\n' +\r\n                '\\n' +\r\n                '.flex-center-wrap {\\n' +\r\n                '  display: flex;\\n' +\r\n                '  align-items: center;\\n' +\r\n                '  justify-content: center;\\n' +\r\n                '  flex-wrap: wrap;\\n' +\r\n                '}\\n' +\r\n                '\\n' +\r\n                '.flex-center-column {\\n' +\r\n                '  display: flex;\\n' +\r\n                '  align-items: center;\\n' +\r\n                '  justify-content: center;\\n' +\r\n                '  flex-direction: column;\\n' +\r\n                '}\\n' +\r\n                '\\n' +\r\n                '.flex-start {\\n' +\r\n                '  display: flex;\\n' +\r\n                '  align-items: center;\\n' +\r\n                '  justify-content: flex-start;\\n' +\r\n                '}\\n' +\r\n                '\\n' +\r\n                '.flex-end {\\n' +\r\n                '  display: flex;\\n' +\r\n                '  align-items: center;\\n' +\r\n                '  justify-content: flex-end;\\n' +\r\n                '}\\n' +\r\n                '\\n' +\r\n                '.flex-space-evenly {\\n' +\r\n                '  display: flex;\\n' +\r\n                '  justify-content: space-evenly;\\n' +\r\n                '  align-items: center;\\n' +\r\n                '}\\n' +\r\n                '\\n' +\r\n                '.justify-center-around {\\n' +\r\n                '  display: flex;\\n' +\r\n                '  align-items: center;\\n' +\r\n                '  justify-content: space-around;\\n' +\r\n                '}\\n' +\r\n                '\\n' +\r\n                '.justify-center-between {\\n' +\r\n                '  display: flex;\\n' +\r\n                '  align-items: center;\\n' +\r\n                '  justify-content: space-between;\\n' +\r\n                '}\\n' +\r\n                '\\n' +\r\n                '.justify-end-between {\\n' +\r\n                '  display: flex;\\n' +\r\n                '  align-items: end;\\n' +\r\n                '  justify-content: space-between;\\n' +\r\n                '}\\n' +\r\n                '\\n' +\r\n                '/* positioning.css */\\n' +\r\n                '.center-relative {\\n' +\r\n                '  position: relative;\\n' +\r\n                '  top: 50%;\\n' +\r\n                '  left: 50%;\\n' +\r\n                '  transform: translate(-50%, -50%);\\n' +\r\n                '}\\n' +\r\n                '\\n' +\r\n                '.bottom-start-relative {\\n' +\r\n                '  position: relative;\\n' +\r\n                '  bottom: 0;\\n' +\r\n                '  left: 0;\\n' +\r\n                '}\\n' +\r\n                '\\n' +\r\n                '.center-absolute {\\n' +\r\n                '  position: absolute;\\n' +\r\n                '  top: 50%;\\n' +\r\n                '  left: 50%;\\n' +\r\n                '  transform: translate(-50%, -50%);\\n' +\r\n                '}\\n' +\r\n                '\\n' +\r\n                '.center-y-relative {\\n' +\r\n                '  position: relative;\\n' +\r\n                '  top: 50%;\\n' +\r\n                '  transform: translateY(-50%);\\n' +\r\n                '}\\n' +\r\n                '\\n' +\r\n                '.center-y-absolute {\\n' +\r\n                '  position: absolute;\\n' +\r\n                '  top: 50%;\\n' +\r\n                '  transform: translateY(-50%);\\n' +\r\n                '}\\n' +\r\n                '\\n' +\r\n                '.bottom-start-fixed {\\n' +\r\n                '  position: fixed;\\n' +\r\n                '  bottom: 0;\\n' +\r\n                '  left: 0;\\n' +\r\n                '}\\n' +\r\n                '\\n' +\r\n                '.center-fixed {\\n' +\r\n                '  position: fixed;\\n' +\r\n                '  top: 50%;\\n' +\r\n                '  left: 50%;\\n' +\r\n                '  transform: translate(-50%, -50%);\\n' +\r\n                '}\\n' +\r\n                '\\n' +\r\n                '.start-relative {\\n' +\r\n                '  position: relative;\\n' +\r\n                '  top: 0;\\n' +\r\n                '  left: 0;\\n' +\r\n                '}\\n' +\r\n                '\\n' +\r\n                '.start-absolute {\\n' +\r\n                '  position: absolute;\\n' +\r\n                '  top: 0;\\n' +\r\n                '  left: 0;\\n' +\r\n                '}\\n' +\r\n                '\\n' +\r\n                '.start-fixed {\\n' +\r\n                '  position: fixed;\\n' +\r\n                '  top: 0;\\n' +\r\n                '  left: 0;\\n' +\r\n                '}\\n' +\r\n                '\\n' +\r\n                '/* utilities.css */\\n' +\r\n                '.container {\\n' +\r\n                '  width: 100vw;\\n' +\r\n                '  max-width: 90vw;\\n' +\r\n                '  margin-inline: auto;\\n' +\r\n                '  text-align: center;\\n' +\r\n                '  box-sizing: border-box;\\n' +\r\n                '  padding: 1rem;\\n' +\r\n                '}\\n' +\r\n                '\\n' +\r\n                '.image-default {\\n' +\r\n                '  width: auto;\\n' +\r\n                '  height: auto;\\n' +\r\n                '  max-width: 100%;\\n' +\r\n                '  max-height: 100%;\\n' +\r\n                '  border-radius: 0.5rem;\\n' +\r\n                '}\\n' +\r\n                '\\n' +\r\n                '.border-box {\\n' +\r\n                '  box-sizing: border-box;\\n' +\r\n                '}\\n' +\r\n                '\\n' +\r\n                '.card {\\n' +\r\n                '  composes: border-box;\\n' +\r\n                '  border: 1px solid var(--secondary-color);\\n' +\r\n                '  background-color: var(--background-color);\\n' +\r\n                '  border-radius: 8px;\\n' +\r\n                '  padding: 1rem;\\n' +\r\n                '  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\\n' +\r\n                '}\\n' +\r\n                '\\n' +\r\n                '.button-primary {\\n' +\r\n                '  composes: flex-center;\\n' +\r\n                '  padding: 0.5rem 1rem;\\n' +\r\n                '  background-color: var(--accent-color);\\n' +\r\n                '  color: #fff;\\n' +\r\n                '  border: none;\\n' +\r\n                '  border-radius: 4px;\\n' +\r\n                '  cursor: pointer;\\n' +\r\n                '  transition: background-color 0.3s ease;\\n' +\r\n                '}\\n' +\r\n                '\\n' +\r\n                '.button-primary:hover {\\n' +\r\n                '  background-color: rgba(var(--accent-rgb), 0.9);\\n' +\r\n                '}\\n' +\r\n                '\\n' +\r\n                '/* media.css */\\n' +\r\n                '@media only screen and (max-width: 767px) {\\n' +\r\n                '  .media-mobile {\\n' +\r\n                '    /* Add mobile-specific styles here */\\n' +\r\n                '  }\\n' +\r\n                '}\\n' +\r\n                '\\n' +\r\n                '@media only screen and (min-width: 767px) and (max-width: 991px) {\\n' +\r\n                '  .media-tablet {\\n' +\r\n                '    /* Add tablet-specific styles here */\\n' +\r\n                '  }\\n' +\r\n                '}\\n' +\r\n                '\\n' +\r\n                '@media only screen and (min-width: 991px) and (max-width: 1200px) {\\n' +\r\n                '  .media-laptop {\\n' +\r\n                '    /* Add laptop-specific styles here */\\n' +\r\n                '  }\\n' +\r\n                '}\\n' +\r\n                '\\n' +\r\n                '@media only screen and (min-width: 1200px) {\\n' +\r\n                '  .media-desktop {\\n' +\r\n                '    /* Add desktop-specific styles here */\\n' +\r\n                '  }\\n' +\r\n                '}\\n'\r\n        },\r\n        {\r\n            summary: 'css шаблоны LESS и SASS',\r\n            content: '/* colors.less */\\n' +\r\n                '@main-color: #351C0F;\\n' +\r\n                '@main-rgb: 53, 28, 15;\\n' +\r\n                '@secondary-color: #E9E9E9;\\n' +\r\n                '@secondary-rgb: 233, 233, 233;\\n' +\r\n                '@accent-color: #FF5733;\\n' +\r\n                '@accent-rgb: 255, 87, 51;\\n' +\r\n                '@background-color: #F0F0F0;\\n' +\r\n                '@background-rgb: 240, 240, 240;\\n' +\r\n                '\\n' +\r\n                '@header-height-mobile: 3rem;\\n' +\r\n                '@header-height-tablet: 4rem;\\n' +\r\n                '@header-height-laptop: 5rem;\\n' +\r\n                '@header-height-desktop: 6rem;\\n' +\r\n                '@header-height-ultrawide: 7rem;\\n' +\r\n                '\\n' +\r\n                '/* flex.less */\\n' +\r\n                '.flex-center() {\\n' +\r\n                '  display: flex;\\n' +\r\n                '  align-items: center;\\n' +\r\n                '  justify-content: center;\\n' +\r\n                '}\\n' +\r\n                '\\n' +\r\n                '.flex-center-wrap() {\\n' +\r\n                '  .flex-center();\\n' +\r\n                '  flex-wrap: wrap;\\n' +\r\n                '}\\n' +\r\n                '\\n' +\r\n                '.flex-center-column() {\\n' +\r\n                '  .flex-center();\\n' +\r\n                '  flex-direction: column;\\n' +\r\n                '}\\n' +\r\n                '\\n' +\r\n                '.flex-start() {\\n' +\r\n                '  display: flex;\\n' +\r\n                '  align-items: center;\\n' +\r\n                '  justify-content: flex-start;\\n' +\r\n                '}\\n' +\r\n                '\\n' +\r\n                '.flex-end() {\\n' +\r\n                '  display: flex;\\n' +\r\n                '  align-items: center;\\n' +\r\n                '  justify-content: flex-end;\\n' +\r\n                '}\\n' +\r\n                '\\n' +\r\n                '/* positioning.less */\\n' +\r\n                '.center-relative() {\\n' +\r\n                '  position: relative;\\n' +\r\n                '  top: 50%;\\n' +\r\n                '  left: 50%;\\n' +\r\n                '  transform: translate(-50%, -50%);\\n' +\r\n                '}\\n' +\r\n                '\\n' +\r\n                '.bottom-start-relative() {\\n' +\r\n                '  position: relative;\\n' +\r\n                '  bottom: 0;\\n' +\r\n                '  left: 0;\\n' +\r\n                '}\\n' +\r\n                '\\n' +\r\n                '.center-absolute() {\\n' +\r\n                '  position: absolute;\\n' +\r\n                '  top: 50%;\\n' +\r\n                '  left: 50%;\\n' +\r\n                '  transform: translate(-50%, -50%);\\n' +\r\n                '}\\n' +\r\n                '\\n' +\r\n                '/* utilities.less */\\n' +\r\n                '.container {\\n' +\r\n                '  width: 100vw;\\n' +\r\n                '  max-width: 90vw;\\n' +\r\n                '  margin-inline: auto;\\n' +\r\n                '  text-align: center;\\n' +\r\n                '  box-sizing: border-box;\\n' +\r\n                '}\\n' +\r\n                '\\n' +\r\n                '.image-default {\\n' +\r\n                '  width: auto;\\n' +\r\n                '  height: auto;\\n' +\r\n                '  max-width: 100%;\\n' +\r\n                '  max-height: 100%;\\n' +\r\n                '}\\n' +\r\n                '\\n' +\r\n                '/* media.less */\\n' +\r\n                '@media (max-width: 767px) {\\n' +\r\n                '  .media-mobile {\\n' +\r\n                '    /* Mobile-specific styles */\\n' +\r\n                '  }\\n' +\r\n                '}\\n' +\r\n                '\\n' +\r\n                '@media (min-width: 767px) and (max-width: 991px) {\\n' +\r\n                '  .media-tablet {\\n' +\r\n                '    /* Tablet-specific styles */\\n' +\r\n                '  }\\n' +\r\n                '}',\r\n        },\r\n        {\r\n            summary: 'css шаблоны SASS',\r\n            content: '@import \"src/styles/variables\"\\n' +\r\n                '\\n' +\r\n                '// флекс центрирование\\n' +\r\n                '@mixin justify-center-around\\n' +\r\n                '  display: flex\\n' +\r\n                '  align-items: center\\n' +\r\n                '  justify-content: space-around\\n' +\r\n                '\\n' +\r\n                '@mixin justify-center-between\\n' +\r\n                '  display: flex\\n' +\r\n                '  align-items: center\\n' +\r\n                '  justify-content: space-between\\n' +\r\n                '\\n' +\r\n                '@mixin flex-center\\n' +\r\n                '  display: flex\\n' +\r\n                '  align-items: center\\n' +\r\n                '  justify-content: center\\n' +\r\n                '\\n' +\r\n                '@mixin flex-center-wrap\\n' +\r\n                '  display: flex\\n' +\r\n                '  align-items: center\\n' +\r\n                '  justify-content: center\\n' +\r\n                '  flex-wrap: wrap\\n' +\r\n                '\\n' +\r\n                '@mixin flex-center-column\\n' +\r\n                '  display: flex\\n' +\r\n                '  flex-direction: column\\n' +\r\n                '  align-items: center\\n' +\r\n                '\\n' +\r\n                '// позиционное центрирование\\n' +\r\n                '@mixin center-relative\\n' +\r\n                '  position: relative\\n' +\r\n                '  top: 50%\\n' +\r\n                '  left: 50%\\n' +\r\n                '  transform: translate(-50%, -50%)\\n' +\r\n                '\\n' +\r\n                '@mixin center-absolute\\n' +\r\n                '  position: absolute\\n' +\r\n                '  top: 50%\\n' +\r\n                '  left: 50%\\n' +\r\n                '  transform: translate(-50%, -50%)\\n' +\r\n                '\\n' +\r\n                '@mixin center-fixed\\n' +\r\n                '  position: absolute\\n' +\r\n                '  top: 50%\\n' +\r\n                '  left: 50%\\n' +\r\n                '  transform: translate(-50%, -50%)\\n' +\r\n                '\\n' +\r\n                '@mixin start-relative\\n' +\r\n                '  position: relative\\n' +\r\n                '  top: 0\\n' +\r\n                '  left: 0\\n' +\r\n                '\\n' +\r\n                '@mixin start-absolute\\n' +\r\n                '  position: absolute\\n' +\r\n                '  top: 0\\n' +\r\n                '  left: 0\\n' +\r\n                '\\n' +\r\n                '@mixin start-fixed\\n' +\r\n                '  position: absolute\\n' +\r\n                '  top: 0\\n' +\r\n                '  left: 0\\n' +\r\n                '\\n' +\r\n                '// градиент\\n' +\r\n                '@mixin gradient($color1, $color2)\\n' +\r\n                '  background-image: linear-gradient($color1, $color2)\\n' +\r\n                '\\n' +\r\n                '// анимация\\n' +\r\n                '@mixin animation($name, $duration, $timing-function, $iteration-count)\\n' +\r\n                '  animation-name: $name\\n' +\r\n                '  animation-duration: $duration\\n' +\r\n                '  animation-timing-function: $timing-function\\n' +\r\n                '  animation-iteration-count: $iteration-count\\n' +\r\n                '\\n' +\r\n                '// миксин для создания карточки с тенью и радиусом скругления\\n' +\r\n                '@mixin card-style\\n' +\r\n                '  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1)\\n' +\r\n                '  border-radius: 8px\\n' +\r\n                '  padding: $base-padding\\n' +\r\n                '  margin: $base-margin\\n' +\r\n                '\\n' +\r\n                '// дефолтные стили\\n' +\r\n                '@mixin imageDefault\\n' +\r\n                '  width: auto\\n' +\r\n                '  height: auto\\n' +\r\n                '  max-width: 100%\\n' +\r\n                '  max-height: 100%\\n' +\r\n                '\\n' +\r\n                '// миксин для создания градиентного фона с углами\\n' +\r\n                '@mixin gradient-angle($color1, $color2, $angle)\\n' +\r\n                '  background-image: linear-gradient($angle, $color1, $color2)\\n' +\r\n                '\\n' +\r\n                '// миксин для создания анимации с задержкой\\n' +\r\n                '@mixin animation-delay($name, $duration, $timing-function, $iteration-count, $delay)\\n' +\r\n                '  animation-name: $name\\n' +\r\n                '  animation-duration: $duration\\n' +\r\n                '  animation-timing-function: $timing-function\\n' +\r\n                '  animation-iteration-count: $iteration-count\\n' +\r\n                '  animation-delay: $delay\\n' +\r\n                '\\n\\n' +\r\n                '// переменные для цветов\\n' +\r\n                '$main-dark: #161513\\n' +\r\n                '$secondary-dark: #1C1C22\\n' +\r\n                '$main-light: #E3E0DEFF\\n' +\r\n                '$secondary-light: #B5B5BBFF\\n' +\r\n                '$accent-color: #FF5733\\n' +\r\n                '$accent-rgb: 255, 87, 51\\n' +\r\n                '$background-color: #F0F0F0\\n' +\r\n                '$background-rgb: 240, 240, 240\\n' +\r\n                '\\n' +\r\n                '// размеры\\n' +\r\n                '$title-margin: 25px\\n' +\r\n                '$block-margin: $title-margin / 2\\n' +\r\n                '$inner-block-margin: $block-margin / 2\\n' +\r\n                '\\n' +\r\n                '// медиа запросы\\n' +\r\n                '$mobile-width: \"(max-width: 767px)\"\\n' +\r\n                '$tablet-width: \"(min-width: 767px) and (max-width: 991px)\"\\n' +\r\n                '$laptop-width: \"(min-width: 991px) and (max-width: 1200px)\"\\n' +\r\n                '$desktop-width: \"(min-width: 1200px)\"\\n' +\r\n                '\\n' +\r\n                '// z индекс\\n' +\r\n                '$z-index-popup: 500\\n' +\r\n                '$z-index-overlay: 450\\n' +\r\n                '$z-index-tooltip: 50\\n' +\r\n                '\\n' +\r\n                '// размеры для хедера\\n' +\r\n                '$header-height: 60px\\n' +\r\n                '$section-vh: calc(100dvh - #{$header-height})\\n' +\r\n                '\\n' +\r\n                '// функции\\n' +\r\n                '@function section-vh-plus($number)\\n' +\r\n                '  @return $number + $section-vh\\n' +\r\n                '\\n' +\r\n                '@function header-height-plus($number)\\n' +\r\n                '  @return $number + $header-height\\n' +\r\n                '\\n' +\r\n                '// шрифты\\n' +\r\n                '$font-family-main: \\'Arial\\', sans-serif\\n' +\r\n                '$font-family-heading: \\'Helvetica\\', sans-serif\\n' +\r\n                '\\n' +\r\n                '// радиус скругления\\n' +\r\n                '$border-radius-small: 4px\\n' +\r\n                '$border-radius-medium: 8px\\n' +\r\n                '$border-radius-large: 16px\\n' +\r\n                '\\n' +\r\n                '// ширина границы\\n' +\r\n                '$border-width: 1px\\n' +\r\n                '$border-color: rgba(0, 0, 0, 0.1)\\n' +\r\n                '\\n' +\r\n                '// отступы\\n' +\r\n                '$base-padding: 1rem\\n' +\r\n                '$base-margin: 1rem\\n' +\r\n                '$card-padding: 2rem\\n' +\r\n                '\\n' +\r\n                '// светлые и темные режимы\\n' +\r\n                '$light-mode-background: #FFFFFF\\n' +\r\n                '$dark-mode-background: #121212\\n' +\r\n                '\\n' +\r\n                '// альфа каналы\\n' +\r\n                '$alpha-channel-light: rgba(255, 255, 255, 0.8)\\n' +\r\n                '$alpha-channel-dark: rgba(0, 0, 0, 0.8)\\n',\r\n        },\r\n        {\r\n            summary: 'components requests',\r\n            content: 'JS\\n' +\r\n                'import {useEffect, useState} from \\'react\\';\\n' +\r\n                '\\n' +\r\n                'export const useFetch = (url, options = {}) => {\\n' +\r\n                '    const [data, setData] = useState([]);\\n' +\r\n                '    const [error, setError] = useState(\\'\\');\\n' +\r\n                '    const [loading, setLoading] = useState(true);\\n' +\r\n                '\\n' +\r\n                '    useEffect(() => {\\n' +\r\n                '        const fetchData = async () => {\\n' +\r\n                '            try {\\n' +\r\n                '                const response = await fetch(url, options);\\n' +\r\n                '                const responseData = await response.json();\\n' +\r\n                '\\n' +\r\n                '                response.ok\\n' +\r\n                '                    ?setData(responseData)\\n' +\r\n                '                    :setError(\\n' +\r\n                '                        `Ошибка запроса на сервер! Код ошибки: ${response.status}`\\n' +\r\n                '                    );\\n' +\r\n                '            } catch (error) {\\n' +\r\n                '                setError(`Произошла ошибка: ${error.message}`);\\n' +\r\n                '            } finally {\\n' +\r\n                '                setLoading(false);\\n' +\r\n                '            }\\n' +\r\n                '        };\\n' +\r\n                '        fetchData();\\n' +\r\n                '    }, []);\\n' +\r\n                '\\n' +\r\n                '    return {data, error, loading};\\n' +\r\n                '};\\n' +\r\n                '\\n' +\r\n                'TS\\n' +\r\n                'import {useState, useEffect} from \"react\";\\n' +\r\n                '\\n' +\r\n                'export interface ObjectWithUnknownValue {\\n' +\r\n                '    [key: string]: unknown;\\n' +\r\n                '}\\n' +\r\n                'export interface FetchResponse<T> {\\n' +\r\n                '    data: T | null;\\n' +\r\n                '    error: string;\\n' +\r\n                '    isLoading: boolean;\\n' +\r\n                '}\\n' +\r\n                '\\n' +\r\n                'export const useFetch = <T>(url: string, options?: ObjectWithUnknownValue): FetchResponse<T> => {\\n' +\r\n                '    const [data, setData] = useState<T | null>(null);\\n' +\r\n                '    const [error, setError] = useState<string>(\\'\\');\\n' +\r\n                '    const [isLoading, setIsLoading] = useState<boolean>(true);\\n' +\r\n                '\\n' +\r\n                '    useEffect(() => {\\n' +\r\n                '        const fetchData = async () => {\\n' +\r\n                '            try {\\n' +\r\n                '                const response = await fetch(url, options);\\n' +\r\n                '                const responseData = await response.json();\\n' +\r\n                '\\n' +\r\n                '                response.ok\\n' +\r\n                '                    ?setData(responseData)\\n' +\r\n                '                    :setError(`Ошибка запроса на сервер! Код ошибки: ${response.status}`);\\n' +\r\n                '            } catch (error: any) {\\n' +\r\n                '                setError(`Произошла ошибка${\\': \\' + error.message}`);\\n' +\r\n                '            } finally {\\n' +\r\n                '                setIsLoading(false);\\n' +\r\n                '            }\\n' +\r\n                '        };\\n' +\r\n                '\\n' +\r\n                '        fetchData();\\n' +\r\n                '    }, [url, options]);\\n' +\r\n                '\\n' +\r\n                '    return {data, error, isLoading};\\n' +\r\n                '};',\r\n        },\r\n        {\r\n            summary: 'components buttons (JS + SASS)',\r\n            content: 'import React from \"react\";\\n' +\r\n                '\\n' +\r\n                'const Button = ({children,func,customClasses = \\'\\'}) => {\\n' +\r\n                '  return <button\\n' +\r\n                '      onClick={func}\\n' +\r\n                '      className={customClasses}\\n' +\r\n                '  >\\n' +\r\n                '      {children}\\n' +\r\n                '  </button>\\n' +\r\n                '};\\n' +\r\n                '\\n' +\r\n                'export default Button;\\n' +\r\n                '\\n' +\r\n                'import React from \\'react\\';\\n' +\r\n                'import classes from \\'./Buttons.module.sass\\';\\n' +\r\n                '\\n' +\r\n                'const IconButton = ({label, icon, isBefore = true, onClick, className = \\'\\'}) => {\\n' +\r\n                '    const beforeOrAfter = isBefore\\n' +\r\n                '        ?\\'before\\'\\n' +\r\n                '        :\\'after\\';\\n' +\r\n                '\\n' +\r\n                '    const handleClick = () => {\\n' +\r\n                '        onClick && onClick();\\n' +\r\n                '    };\\n' +\r\n                '\\n' +\r\n                '    return (\\n' +\r\n                '        <button className={`${classes.icon_button} ${beforeOrAfter} ${className}`} onClick={handleClick}>\\n' +\r\n                '            {isBefore &&\\n' +\r\n                '                <img\\n' +\r\n                '                    src={icon}\\n' +\r\n                '                    alt=\"Before\"\\n' +\r\n                '                />\\n' +\r\n                '            }\\n' +\r\n                '            {label &&\\n' +\r\n                '                <span>\\n' +\r\n                '                    {label}\\n' +\r\n                '                </span>\\n' +\r\n                '            }\\n' +\r\n                '            {!isBefore &&\\n' +\r\n                '                <img\\n' +\r\n                '                    src={icon}\\n' +\r\n                '                    alt=\"After\"\\n' +\r\n                '                />\\n' +\r\n                '            }\\n' +\r\n                '        </button>\\n' +\r\n                '    );\\n' +\r\n                '};\\n' +\r\n                '\\n' +\r\n                'export default IconButton;\\n' +\r\n                '\\n' +\r\n                '@import \"src/styles/mixins\"\\n' +\r\n                '@import \"src/styles/variables\"\\n' +\r\n                '\\n' +\r\n                '.icon_button\\n' +\r\n                '  @include flex-center\\n' +\r\n                '  padding: 8px 16px\\n' +\r\n                '  border: none\\n' +\r\n                '  border-radius: 8px\\n' +\r\n                '  background-color: $secondary-light !important\\n' +\r\n                '  position: relative\\n' +\r\n                '  cursor: pointer\\n' +\r\n                '  transition: 0.3s\\n' +\r\n                '\\n' +\r\n                '  span\\n' +\r\n                '    margin-left: 8px\\n' +\r\n                '    color: $main-dark\\n' +\r\n                '\\n' +\r\n                '  img\\n' +\r\n                '    height: 16px\\n' +\r\n                '    object-fit: contain\\n' +\r\n                '\\n' +\r\n                '  @media(hover: hover)\\n' +\r\n                '    &:hover\\n' +\r\n                '      padding: 10px 20px\\n' +\r\n                '      border: 1px solid $secondary-light'\r\n        },\r\n        {\r\n          summary: 'components buttons (TS + STYLED COMPONENTS)',\r\n          content: 'import React,{FC} from \\'react\\';\\n' +\r\n              'import styled from \"styled-components\";\\n' +\r\n              'import {colors, flexCenter} from \"../../styles/styles\";\\n' +\r\n              '\\n' +\r\n              'interface IconButtonProps {\\n' +\r\n              '    label?: string,\\n' +\r\n              '    icon: string,\\n' +\r\n              '    alt?: string,\\n' +\r\n              '    iconLocation: \\'before\\' | \\'after\\',\\n' +\r\n              '    onClick: () => any,\\n' +\r\n              '}\\n' +\r\n              '\\n' +\r\n              'const Button = styled.button`\\n' +\r\n              '  padding: 10px 20px;\\n' +\r\n              '  border: none;\\n' +\r\n              '  border-radius: 8px;\\n' +\r\n              '   background-color: ${colors.secondaryLight} !important;\\n' +\r\n              '  position: relative;\\n' +\r\n              '  cursor: pointer;\\n' +\r\n              '  transition: 0.3s;\\n' +\r\n              '  ${flexCenter}\\n' +\r\n              '  span{\\n' +\r\n              '    color: ${colors.mainDark};\\n' +\r\n              '    margin: auto 8px;\\n' +\r\n              '  }\\n' +\r\n              '  img {\\n' +\r\n              '    height: 24px;\\n' +\r\n              '    object-fit: contain;\\n' +\r\n              '  }\\n' +\r\n              '  @media(hover: hover){\\n' +\r\n              '    &:hover {\\n' +\r\n              '      padding: 12px 24px;\\n' +\r\n              '      border: 1px solid ${colors.secondaryLight};\\n' +\r\n              '    }\\n' +\r\n              '  }\\n' +\r\n              '  @media(hover: none){\\n' +\r\n              '    &:active {\\n' +\r\n              '      padding: 12px 24px;\\n' +\r\n              '      border: 1px solid ${colors.secondaryLight};\\n' +\r\n              '    }\\n' +\r\n              '  }\\n' +\r\n              '`;\\n' +\r\n              '\\n' +\r\n              'const IconButton:FC<IconButtonProps> = ({label,icon,alt = \\'text\\',iconLocation,onClick}) => {\\n' +\r\n              '    return(\\n' +\r\n              '        <Button onClick={onClick}>\\n' +\r\n              '            {iconLocation === \\'before\\' &&\\n' +\r\n              '                <img src={icon} alt={alt}/>\\n' +\r\n              '            }\\n' +\r\n              '            {label &&\\n' +\r\n              '                <span>{label}</span>\\n' +\r\n              '            }\\n' +\r\n              '            {iconLocation === \\'after\\' &&\\n' +\r\n              '                <img src={icon} alt={alt}/>\\n' +\r\n              '            }\\n' +\r\n              '        </Button>\\n' +\r\n              '    )\\n' +\r\n              '}\\n' +\r\n              '\\n' +\r\n              'export default IconButton;'\r\n        },\r\n        {\r\n            summary: 'components navigation (JS + SASS)',\r\n            content: 'import React from \\'react\\';\\n' +\r\n                'import classes from \\'./Navigation.module.sass\\';\\n' +\r\n                'import {useLocation} from \"react-router-dom\";\\n' +\r\n                'import {HashLink} from \"react-router-hash-link\";\\n' +\r\n                '\\n' +\r\n                'const Navigation = ({config, text}) => {\\n' +\r\n                '    const location = useLocation();\\n' +\r\n                '    return (\\n' +\r\n                '        <nav className={classes.wrapper}>\\n' +\r\n                '            {Object.entries(config).map(([key, value]) => {\\n' +\r\n                '                const isActive = location.pathname === value\\n' +\r\n                '                    ?classes.active :\\'\\';\\n' +\r\n                '\\n' +\r\n                '                return (\\n' +\r\n                '                    <HashLink\\n' +\r\n                '                        smooth\\n' +\r\n                '                        to={value}\\n' +\r\n                '                        className={`${classes.link}\\n' +\r\n                '                        ${isActive}`}\\n' +\r\n                '                        key={key}\\n' +\r\n                '                    >\\n' +\r\n                '                        {text[key]}\\n' +\r\n                '                    </HashLink>\\n' +\r\n                '                )\\n' +\r\n                '            })}\\n' +\r\n                '        </nav>\\n' +\r\n                '    );\\n' +\r\n                '};\\n' +\r\n                '\\n' +\r\n                'export default Navigation;\\n' +\r\n                '\\n' +\r\n                '@import \"src/styles/mixins\"\\n' +\r\n                '@import \"src/styles/variables\"\\n' +\r\n                '\\n' +\r\n                '@keyframes enlarge\\n' +\r\n                '  from\\n' +\r\n                '    font-size: 1em\\n' +\r\n                '  to\\n' +\r\n                '    text-decoration: underline $main-light\\n' +\r\n                '    font-size: 1.1em\\n' +\r\n                '\\n' +\r\n                '.wrapper\\n' +\r\n                '  display: flex\\n' +\r\n                '  align-items: center\\n' +\r\n                '\\n' +\r\n                '  .link\\n' +\r\n                '    font-weight: bold\\n' +\r\n                '    text-decoration: none\\n' +\r\n                '    transition: 3s\\n' +\r\n                '\\n' +\r\n                '    & + .link\\n' +\r\n                '      margin-left: 24px\\n' +\r\n                '      @media #{$mobile-width}\\n' +\r\n                '        margin-left: 12px\\n' +\r\n                '\\n' +\r\n                '    @media(hover: hover)\\n' +\r\n                '      &:hover\\n' +\r\n                '        animation: enlarge 0.2s forwards\\n' +\r\n                '\\n' +\r\n                '  @media (max-width: 450px)\\n' +\r\n                '    display: none\\n' +\r\n                '\\n' +\r\n                '.active\\n' +\r\n                '  pointer-events: none\\n' +\r\n                '  opacity: 0.3'\r\n        },\r\n        {\r\n            summary: 'components (TS + SASS)',\r\n            content: 'import React from \\'react\\';\\n' +\r\n                'import classes from \\'./Navigation.module.sass\\';\\n' +\r\n                'import { useLocation } from \"react-router-dom\";\\n' +\r\n                'import { HashLink } from \"react-router-hash-link\";\\n' +\r\n                '\\n' +\r\n                '// Типы для пропсов\\n' +\r\n                'interface NavigationProps {\\n' +\r\n                '  config: Record<string, string>;\\n' +\r\n                '  text: Record<string, string>;\\n' +\r\n                '}\\n' +\r\n                '\\n' +\r\n                'const Navigation: React.FC<NavigationProps> = ({ config, text }) => {\\n' +\r\n                '  const location = useLocation();\\n' +\r\n                '\\n' +\r\n                '  return (\\n' +\r\n                '    <nav className={classes.wrapper}>\\n' +\r\n                '      {Object.entries(config).map(([key, value]) => {\\n' +\r\n                '        const isActive = location.pathname === value ? classes.active : \\'\\';\\n' +\r\n                '\\n' +\r\n                '        return (\\n' +\r\n                '          <HashLink\\n' +\r\n                '            smooth\\n' +\r\n                '            to={value}\\n' +\r\n                '            className={`${classes.link} ${isActive}`}\\n' +\r\n                '            key={key}\\n' +\r\n                '          >\\n' +\r\n                '            {text[key]}\\n' +\r\n                '          </HashLink>\\n' +\r\n                '        );\\n' +\r\n                '      })}\\n' +\r\n                '    </nav>\\n' +\r\n                '  );\\n' +\r\n                '};\\n' +\r\n                '\\n' +\r\n                'export default Navigation;\\n'\r\n        },\r\n        {\r\n            summary: 'components images (JS + SASS)',\r\n            content: 'SCROLABLE IMAGE\\n' +\r\n                'import React from \\'react\\';\\n' +\r\n                'import classes from \\'./ScrollableImage.module.sass\\';\\n' +\r\n                '\\n' +\r\n                'const ScrollableImage = ({src = \\'#\\', alt = \\'image\\', className = \\'\\'}) => {\\n' +\r\n                '\\n' +\r\n                '    return (\\n' +\r\n                '        <div\\n' +\r\n                '            className={`${classes.image_block} ${className}`}\\n' +\r\n                '        >\\n' +\r\n                '            <img\\n' +\r\n                '                src={src}\\n' +\r\n                '                alt={alt}\\n' +\r\n                '            />\\n' +\r\n                '        </div>\\n' +\r\n                '    );\\n' +\r\n                '};\\n' +\r\n                '\\n' +\r\n                'export default ScrollableImage;\\n' +\r\n                '\\n' +\r\n                '@import \"src/styles/mixins\"\\n' +\r\n                '@import \"src/styles/variables\"\\n' +\r\n                '\\n' +\r\n                '.image_block\\n' +\r\n                '  width: 100%\\n' +\r\n                '  height: 100%\\n' +\r\n                '  overflow: auto\\n' +\r\n                '  img\\n' +\r\n                '    width: 100%\\n' +\r\n                '\\n' +\r\n                'TOOLTIPED IMAGE\\n' +\r\n                'import React from \\'react\\';\\n' +\r\n                'import classes from \\'./TooltopedImage.module.sass\\';\\n' +\r\n                'import {Tooltip} from \"@mui/material\";\\n' +\r\n                '\\n' +\r\n                'const TooltipedImage  = ({title,placement = \\'top\\',image,alt}) => {\\n' +\r\n                '    const isImageSkills = image.includes(\\'https://skillicons.dev/icons?i=\\');\\n' +\r\n                '    const skillsCount = (image.match(/,/g) || []).length + 1;\\n' +\r\n                '\\n' +\r\n                '    return(\\n' +\r\n                '        <Tooltip\\n' +\r\n                '            title={title}\\n' +\r\n                '            arrow\\n' +\r\n                '            placement={placement}\\n' +\r\n                '        >\\n' +\r\n                '            <img\\n' +\r\n                '                src={image}\\n' +\r\n                '                alt={alt || title || image}\\n' +\r\n                '                className={classes.image}\\n' +\r\n                '                style={isImageSkills && {width: `${skillsCount * 40}px`}}\\n' +\r\n                '            />\\n' +\r\n                '        </Tooltip>\\n' +\r\n                '    );\\n' +\r\n                '};\\n' +\r\n                '\\n' +\r\n                'export default TooltipedImage;\\n' +\r\n                '\\n\\n' +\r\n                '.image\\n' +\r\n                '  height: 40px\\n' +\r\n                '  transition: transform 0.2s ease-in-out\\n' +\r\n                '  @media(hover: hover)\\n' +\r\n                '    &:hover\\n' +\r\n                '      transform: scale(1.1)\\n' +\r\n                '  @media(hover: none)\\n' +\r\n                '    &:active\\n' +\r\n                '      transform: scale(1.1)\\n' +\r\n                '\\n\\n' +\r\n                'ZOOMABLE IMAGE\\n' +\r\n                'import React, { useState } from \\'react\\';\\n' +\r\n                'import classes from \\'./ZoomableImage.module.sass\\';\\n' +\r\n                '\\n' +\r\n                'const ZoomableImage = ({src, alt, className = \\'\\'}) => {\\n' +\r\n                '    const [zoomed, setZoomed] = useState(false);\\n' +\r\n                '\\n' +\r\n                '    const handleZoomToggle = () => {\\n' +\r\n                '        setZoomed(!zoomed);\\n' +\r\n                '    };\\n' +\r\n                '\\n' +\r\n                '    return (\\n' +\r\n                '        <div\\n' +\r\n                '            className={classes.modal}\\n' +\r\n                '            onClick={handleZoomToggle}\\n' +\r\n                '        >\\n' +\r\n                '            <img\\n' +\r\n                '                src={src}\\n' +\r\n                '                alt={alt}\\n' +\r\n                '                className={`${className} ${classes.image}`}\\n' +\r\n                '            />\\n' +\r\n                '            {zoomed &&\\n' +\r\n                '                <div\\n' +\r\n                '                    onClick={handleZoomToggle}\\n' +\r\n                '                    className={classes.overlay}\\n' +\r\n                '                >\\n' +\r\n                '                    <div\\n' +\r\n                '                        className={classes.modal__image}\\n' +\r\n                '                    >\\n' +\r\n                '                        <img\\n' +\r\n                '                            src={src}\\n' +\r\n                '                            alt={alt}\\n' +\r\n                '                        />\\n' +\r\n                '                    </div>\\n' +\r\n                '                </div>\\n' +\r\n                '            }\\n' +\r\n                '        </div>\\n' +\r\n                '    );\\n' +\r\n                '};\\n' +\r\n                '\\n' +\r\n                'export default ZoomableImage;\\n' +\r\n                '\\n' +\r\n                '@import \"src/styles/mixins\"\\n' +\r\n                '@import \"src/styles/variables\"\\n' +\r\n                '\\n' +\r\n                '.overlay\\n' +\r\n                '  position: fixed\\n' +\r\n                '  top: 0\\n' +\r\n                '  left: 0\\n' +\r\n                '  width: 100vw\\n' +\r\n                '  height: 100vh\\n' +\r\n                '  background-color: rgba(0, 0, 0, 0.8)\\n' +\r\n                '  cursor: zoom-out\\n' +\r\n                '  @include flex-center\\n' +\r\n                '  z-index: 998\\n' +\r\n                '\\n' +\r\n                '.image\\n' +\r\n                '  transition: .3s ease-in-out\\n' +\r\n                '  @media (hover: hover)\\n' +\r\n                '    &:hover\\n' +\r\n                '      transform: scale(1.1)\\n' +\r\n                '\\n' +\r\n                '.modal\\n' +\r\n                '  position: relative\\n' +\r\n                '  display: inline-block\\n' +\r\n                '  cursor: zoom-in\\n' +\r\n                '  overflow: hidden\\n' +\r\n                '  border-radius: 8px\\n' +\r\n                '  &__image\\n' +\r\n                '    position: fixed\\n' +\r\n                '    top: 50%\\n' +\r\n                '    left: 50%\\n' +\r\n                '    transform: translate(-50%, -50%)\\n' +\r\n                '    width: 90vw\\n' +\r\n                '    height: 90vh\\n' +\r\n                '    @include flex-center\\n' +\r\n                '    z-index: 9999\\n' +\r\n                '    img\\n' +\r\n                '      @include imageDefault\\n' +\r\n                '      object-fit: contain'\r\n        },\r\n        {\r\n            summary: 'components images (JS + SASS)',\r\n            content: 'SCROLABLE IMAGE\\n' +\r\n                'import React from \\'react\\';\\n' +\r\n                'import classes from \\'./ScrollableImage.module.sass\\';\\n' +\r\n                '\\n' +\r\n                'interface ScrollableImageProps {\\n' +\r\n                '  src?: string;\\n' +\r\n                '  alt?: string;\\n' +\r\n                '  className?: string;\\n' +\r\n                '}\\n' +\r\n                '\\n' +\r\n                'const ScrollableImage: React.FC<ScrollableImageProps> = ({\\n' +\r\n                '  src = \\'#\\',\\n' +\r\n                '  alt = \\'image\\',\\n' +\r\n                '  className = \\'\\',\\n' +\r\n                '}) => {\\n' +\r\n                '  return (\\n' +\r\n                '    <div className={`${classes.image_block} ${className}`}>\\n' +\r\n                '      <img src={src} alt={alt} />\\n' +\r\n                '    </div>\\n' +\r\n                '  );\\n' +\r\n                '};\\n' +\r\n                '\\n' +\r\n                'export default ScrollableImage;\\n' +\r\n                '\\n' +\r\n                '@import \"src/styles/mixins\"\\n' +\r\n                '@import \"src/styles/variables\"\\n' +\r\n                '\\n' +\r\n                '.image_block\\n' +\r\n                '  width: 100%\\n' +\r\n                '  height: 100%\\n' +\r\n                '  overflow: auto\\n' +\r\n                '  img\\n' +\r\n                '    width: 100%\\n' +\r\n                '\\n' +\r\n                'TOOLTIPED IMAGE\\n' +\r\n                'import React from \\'react\\';\\n' +\r\n                'import classes from \\'./TooltopedImage.module.sass\\';\\n' +\r\n                'import {Tooltip} from \"@mui/material\";\\n' +\r\n                '\\n' +\r\n                'import React from \\'react\\';\\n' +\r\n                'import classes from \\'./TooltopedImage.module.sass\\';\\n' +\r\n                'import { Tooltip } from \\'@mui/material\\';\\n' +\r\n                '\\n' +\r\n                'interface TooltipedImageProps {\\n' +\r\n                '  title: string;\\n' +\r\n                '  placement?: \\'top\\' | \\'bottom\\' | \\'left\\' | \\'right\\';\\n' +\r\n                '  image: string;\\n' +\r\n                '  alt?: string;\\n' +\r\n                '}\\n' +\r\n                '\\n' +\r\n                'const TooltipedImage: React.FC<TooltipedImageProps> = ({\\n' +\r\n                '  title,\\n' +\r\n                '  placement = \\'top\\',\\n' +\r\n                '  image,\\n' +\r\n                '  alt,\\n' +\r\n                '}) => {\\n' +\r\n                '  const isImageSkills = image.includes(\\'https://skillicons.dev/icons?i=\\');\\n' +\r\n                '  const skillsCount = (image.match(/,/g) || []).length + 1;\\n' +\r\n                '\\n' +\r\n                '  return (\\n' +\r\n                '    <Tooltip title={title} arrow placement={placement}>\\n' +\r\n                '      <img\\n' +\r\n                '        src={image}\\n' +\r\n                '        alt={alt || title || image}\\n' +\r\n                '        className={classes.image}\\n' +\r\n                '        style={isImageSkills && { width: `${skillsCount * 40}px` }}\\n' +\r\n                '      />\\n' +\r\n                '    </Tooltip>\\n' +\r\n                '  );\\n' +\r\n                '};\\n' +\r\n                '\\n' +\r\n                'export default TooltipedImage;\\n' +\r\n                '\\n\\n' +\r\n                '.image\\n' +\r\n                '  height: 40px\\n' +\r\n                '  transition: transform 0.2s ease-in-out\\n' +\r\n                '  @media(hover: hover)\\n' +\r\n                '    &:hover\\n' +\r\n                '      transform: scale(1.1)\\n' +\r\n                '  @media(hover: none)\\n' +\r\n                '    &:active\\n' +\r\n                '      transform: scale(1.1)\\n' +\r\n                '\\n\\n' +\r\n                'ZOOMABLE IMAGE\\n' +\r\n                'import React, { useState } from \\'react\\';\\n' +\r\n                'import classes from \\'./ZoomableImage.module.sass\\';\\n' +\r\n                '\\n' +\r\n                'interface ZoomableImageProps {\\n' +\r\n                '  src: string;\\n' +\r\n                '  alt: string;\\n' +\r\n                '  className?: string;\\n' +\r\n                '}\\n' +\r\n                '\\n' +\r\n                'const ZoomableImage: React.FC<ZoomableImageProps> = ({\\n' +\r\n                '  src,\\n' +\r\n                '  alt,\\n' +\r\n                '  className = \\'\\',\\n' +\r\n                '}) => {\\n' +\r\n                '  const [zoomed, setZoomed] = useState<boolean>(false);\\n' +\r\n                '\\n' +\r\n                '  const handleZoomToggle = () => {\\n' +\r\n                '    setZoomed(!zoomed);\\n' +\r\n                '  };\\n' +\r\n                '\\n' +\r\n                '  return (\\n' +\r\n                '    <div className={classes.modal} onClick={handleZoomToggle}>\\n' +\r\n                '      <img\\n' +\r\n                '        src={src}\\n' +\r\n                '        alt={alt}\\n' +\r\n                '        className={`${className} ${classes.image}`}\\n' +\r\n                '      />\\n' +\r\n                '      {zoomed && (\\n' +\r\n                '        <div onClick={handleZoomToggle} className={classes.overlay}>\\n' +\r\n                '          <div className={classes.modal__image}>\\n' +\r\n                '            <img src={src} alt={alt} />\\n' +\r\n                '          </div>\\n' +\r\n                '        </div>\\n' +\r\n                '      )}\\n' +\r\n                '    </div>\\n' +\r\n                '  );\\n' +\r\n                '};\\n' +\r\n                '\\n' +\r\n                'export default ZoomableImage;\\n' +\r\n                '\\n' +\r\n                '@import \"src/styles/mixins\"\\n' +\r\n                '@import \"src/styles/variables\"\\n' +\r\n                '\\n' +\r\n                '.overlay\\n' +\r\n                '  position: fixed\\n' +\r\n                '  top: 0\\n' +\r\n                '  left: 0\\n' +\r\n                '  width: 100vw\\n' +\r\n                '  height: 100vh\\n' +\r\n                '  background-color: rgba(0, 0, 0, 0.8)\\n' +\r\n                '  cursor: zoom-out\\n' +\r\n                '  @include flex-center\\n' +\r\n                '  z-index: 998\\n' +\r\n                '\\n' +\r\n                '.image\\n' +\r\n                '  transition: .3s ease-in-out\\n' +\r\n                '  @media (hover: hover)\\n' +\r\n                '    &:hover\\n' +\r\n                '      transform: scale(1.1)\\n' +\r\n                '\\n' +\r\n                '.modal\\n' +\r\n                '  position: relative\\n' +\r\n                '  display: inline-block\\n' +\r\n                '  cursor: zoom-in\\n' +\r\n                '  overflow: hidden\\n' +\r\n                '  border-radius: 8px\\n' +\r\n                '  &__image\\n' +\r\n                '    position: fixed\\n' +\r\n                '    top: 50%\\n' +\r\n                '    left: 50%\\n' +\r\n                '    transform: translate(-50%, -50%)\\n' +\r\n                '    width: 90vw\\n' +\r\n                '    height: 90vh\\n' +\r\n                '    @include flex-center\\n' +\r\n                '    z-index: 9999\\n' +\r\n                '    img\\n' +\r\n                '      @include imageDefault\\n' +\r\n                '      object-fit: contain'\r\n        },\r\n        {\r\n            summary: 'components loading spinner (JS + STYLED COMPONENTS)',\r\n            content: 'import React from \"react\";\\n' +\r\n                'import { CircularProgress } from \"@mui/material\";\\n' +\r\n                'import { styled } from \"styled-components\";\\n' +\r\n                '\\n' +\r\n                'const Loading = styled.div`\\n' +\r\n                '  display: flex;\\n' +\r\n                '  align-items: center;\\n' +\r\n                '  font-size: 1.5rem;\\n' +\r\n                '`;\\n' +\r\n                '\\n' +\r\n                'const LoadingSpinner = ({ value = \\'Загрузка...\\' }) => {\\n' +\r\n                '  return (\\n' +\r\n                '    <Loading>\\n' +\r\n                '      <CircularProgress />\\n' +\r\n                '      <p>{value}</p>\\n' +\r\n                '    </Loading>\\n' +\r\n                '  );\\n' +\r\n                '};\\n' +\r\n                '\\n' +\r\n                'export default LoadingSpinner;\\n'\r\n        },\r\n        {\r\n            summary: 'components loading spinner (TS + STYLED COMPONENTS)',\r\n            content: 'import React,{FC} from \"react\";\\n' +\r\n                'import {CircularProgress} from \"@mui/material\";\\n' +\r\n                'import {styled} from \"styled-components\";\\n' +\r\n                '\\n' +\r\n                'interface LoadingSpinnerProps {\\n' +\r\n                '    value?: string;\\n' +\r\n                '}\\n' +\r\n                'const Loading = styled.div`\\n' +\r\n                '  display: flex;\\n' +\r\n                '  align-items: center;\\n' +\r\n                '  font-size: 1.5rem;\\n' +\r\n                '`;\\n' +\r\n                '\\n' +\r\n                'const LoadingSpinner: FC<LoadingSpinnerProps> = ({value = \\'Загрузка...\\'}) => {\\n' +\r\n                '  return (\\n' +\r\n                '      <Loading>\\n' +\r\n                '          <CircularProgress/>\\n' +\r\n                '          <p>{value}</p>\\n' +\r\n                '      </Loading>\\n' +\r\n                '  )\\n' +\r\n                '};\\n' +\r\n                '\\n' +\r\n                'export default LoadingSpinner;'\r\n        },\r\n        {\r\n            summary: 'components modal (JS + COMPONENTS + REACT ROUTER DOM)',\r\n            content: 'import React, { Fragment } from \\'react\\';\\n' +\r\n                'import styled from \"styled-components\";\\n' +\r\n                'import { useLocation, useNavigate } from \"react-router-dom\";\\n' +\r\n                'import { colors, flexCenter, flexCenter_column, justifyCenter_between, center_absolute } from \"../../styles/styles\";\\n' +\r\n                '\\n' +\r\n                'const Overlay = styled.div`\\n' +\r\n                '    position: fixed;\\n' +\r\n                '    top: 0;\\n' +\r\n                '    left: 0;\\n' +\r\n                '    width: 100vw;\\n' +\r\n                '    height: 100vh;\\n' +\r\n                '    background-color: rgba(0, 0, 0, 0.8);\\n' +\r\n                '    @include flex-center;\\n' +\r\n                '    z-index: 998;\\n' +\r\n                '`;\\n' +\r\n                'const ModalStyled = styled.div`\\n' +\r\n                '    position: fixed;\\n' +\r\n                '    top: 50%;\\n' +\r\n                '    left: 50%;\\n' +\r\n                '    transform: translate(-50%, -50%);\\n' +\r\n                '    border: 2px solid ${colors.secondaryLight};\\n' +\r\n                '    border-radius: 8px;\\n' +\r\n                '    box-sizing: content-box;\\n' +\r\n                '    ${flexCenter_column};\\n' +\r\n                '    z-index: 9999;    \\n' +\r\n                '`;\\n' +\r\n                'const ModalHeader = styled.div`\\n' +\r\n                '    width: 100%;\\n' +\r\n                '    padding: 5px;\\n' +\r\n                '    box-sizing: border-box;\\n' +\r\n                '    background-color: ${colors.secondaryDark};\\n' +\r\n                '    border-top-left-radius: 8px;\\n' +\r\n                '    border-top-right-radius: 8px;\\n' +\r\n                '    ${justifyCenter_between}\\n' +\r\n                '    button{\\n' +\r\n                '      width: 30px;\\n' +\r\n                '      aspect-ratio: 1;\\n' +\r\n                '      position: relative;\\n' +\r\n                '      cursor: pointer;\\n' +\r\n                '      &::before{\\n' +\r\n                '        content: \\'x\\';\\n' +\r\n                '        font-size: 2rem;\\n' +\r\n                '        ${center_absolute};\\n' +\r\n                '        transform: translate(-50%,-60%);\\n' +\r\n                '      }\\n' +\r\n                '    }\\n' +\r\n                '`;\\n' +\r\n                'const ModalContent = styled.div`\\n' +\r\n                '    padding: 5px;\\n' +\r\n                '    border-bottom-left-radius: 8px;\\n' +\r\n                '    border-bottom-right-radius: 8px;\\n' +\r\n                '    ${flexCenter}\\n' +\r\n                '`;\\n' +\r\n                '\\n' +\r\n                'const Modal = ({ title, content }) => {\\n' +\r\n                '    const location = useLocation();\\n' +\r\n                '    const navigate = useNavigate();\\n' +\r\n                '    const isMainPage = () => {\\n' +\r\n                '      return location.pathname === \\'/\\';\\n' +\r\n                '    };\\n' +\r\n                '    const handleClose = () => {\\n' +\r\n                '        navigate(\\'/\\');\\n' +\r\n                '    };\\n' +\r\n                '\\n' +\r\n                '    return isMainPage() ? null : (\\n' +\r\n                '        <Fragment>\\n' +\r\n                '            <Overlay />\\n' +\r\n                '            <ModalStyled>\\n' +\r\n                '                <ModalHeader>\\n' +\r\n                '                    <h2>{title}</h2>\\n' +\r\n                '                    <button onClick={handleClose} />\\n' +\r\n                '                </ModalHeader>\\n' +\r\n                '                <ModalContent>\\n' +\r\n                '                    {content}\\n' +\r\n                '                </ModalContent>\\n' +\r\n                '            </ModalStyled>\\n' +\r\n                '        </Fragment>\\n' +\r\n                '    );\\n' +\r\n                '};\\n' +\r\n                '\\n' +\r\n                'export default Modal;\\n'\r\n        },\r\n        {\r\n            summary: 'components modal (TS + STYLED COMPONENTS + REACT ROUTE DOM)',\r\n            content: 'import React,{FC,Fragment,ReactElement} from \\'react\\';\\n' +\r\n                'import styled from \"styled-components\";\\n' +\r\n                'import {useLocation,useNavigate} from \"react-router-dom\";\\n' +\r\n                'import {colors,flexCenter,flexCenter_column,justifyCenter_between,center_absolute} from \"../../styles/styles\";\\n' +\r\n                '\\n' +\r\n                'interface ModalProps {\\n' +\r\n                '    title: string,\\n' +\r\n                '    content: ReactElement | string,\\n' +\r\n                '}\\n' +\r\n                '\\n' +\r\n                'const Overlay = styled.div`\\n' +\r\n                '    position: fixed;\\n' +\r\n                '    top: 0;\\n' +\r\n                '    left: 0;\\n' +\r\n                '    width: 100vw;\\n' +\r\n                '    height: 100vh;\\n' +\r\n                '    background-color: rgba(0, 0, 0, 0.8);\\n' +\r\n                '    @include flex-center;\\n' +\r\n                '    z-index: 998;\\n' +\r\n                '`;\\n' +\r\n                'const ModalStyled = styled.div`\\n' +\r\n                '    position: fixed;\\n' +\r\n                '    top: 50%;\\n' +\r\n                '    left: 50%;\\n' +\r\n                '    transform: translate(-50%, -50%);\\n' +\r\n                '    border: 2px solid ${colors.secondaryLight};\\n' +\r\n                '    border-radius: 8px;\\n' +\r\n                '    box-sizing: content-box;\\n' +\r\n                '    ${flexCenter_column};\\n' +\r\n                '    z-index: 9999;    \\n' +\r\n                '`;\\n' +\r\n                'const ModalHeader = styled.div`\\n' +\r\n                '    width: 100%;\\n' +\r\n                '    padding: 5px;\\n' +\r\n                '    box-sizing: border-box;\\n' +\r\n                '    background-color: ${colors.secondaryDark};\\n' +\r\n                '    border-top-left-radius: 8px;\\n' +\r\n                '    border-top-right-radius: 8px;\\n' +\r\n                '    ${justifyCenter_between}\\n' +\r\n                '    button{\\n' +\r\n                '      width: 30px;\\n' +\r\n                '      aspect-ratio: 1;\\n' +\r\n                '      position: relative;\\n' +\r\n                '      cursor: pointer;\\n' +\r\n                '      &::before{\\n' +\r\n                '        content: \\'x\\';\\n' +\r\n                '        font-size: 2rem;\\n' +\r\n                '        ${center_absolute};\\n' +\r\n                '        transform: translate(-50%,-60%);\\n' +\r\n                '      }\\n' +\r\n                '    }\\n' +\r\n                '`;\\n' +\r\n                'const ModalContent = styled.div`\\n' +\r\n                '    padding: 5px;\\n' +\r\n                '    border-bottom-left-radius: 8px;\\n' +\r\n                '    border-bottom-right-radius: 8px;\\n' +\r\n                '    ${flexCenter}\\n' +\r\n                '`;\\n' +\r\n                '\\n' +\r\n                'const Modal:FC<ModalProps> = ({title,content}) => {\\n' +\r\n                '    const location = useLocation();\\n' +\r\n                '    const navigate = useNavigate();\\n' +\r\n                '    const isMainPage = (): boolean => {\\n' +\r\n                '      return location.pathname === \\'/\\';\\n' +\r\n                '    };\\n' +\r\n                '    const handleClose = (): void => {\\n' +\r\n                '        navigate(\\'/\\');\\n' +\r\n                '    };\\n' +\r\n                '\\n' +\r\n                '    return isMainPage()?null:(\\n' +\r\n                '            <Fragment>\\n' +\r\n                '                <Overlay/>\\n' +\r\n                '                <ModalStyled>\\n' +\r\n                '                    <ModalHeader>\\n' +\r\n                '                        <h2>{title}</h2>\\n' +\r\n                '                        <button onClick={handleClose}/>\\n' +\r\n                '                    </ModalHeader>\\n' +\r\n                '                    <ModalContent>\\n' +\r\n                '                        {content}\\n' +\r\n                '                    </ModalContent>\\n' +\r\n                '                </ModalStyled>\\n' +\r\n                '            </Fragment>\\n' +\r\n                '        )\\n' +\r\n                '};\\n' +\r\n                '\\n' +\r\n                'export default Modal;'\r\n        },\r\n    ]\r\n}"],"names":["templates"],"mappings":"AAAA,MAAeA,EAAA,CACX,MAAO,UACP,SAAU,UACV,GAAI,YACJ,MAAO,CACH,CACI,QAAS,4BACT,QAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWZ,EACD,CACE,QAAS,+CACT,QAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CA8JV,EACD,CACE,QAAS,wmNV,EACD,CACI,QAAS,iCACT,QAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAgmkKZ,EACD,CACI,QAAS,sBACT,QAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAqEZ,EACD,CACI,QAAS,iCACT,QAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCA2EZ,EACD,CACE,QAAS,8CACT,QAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BA4DV,EACD,CACI,QAAS,oCACT,QAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAiEZ,EACD,CACI,QAAS,yBACT,QAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAmCZ,EACD,CACI,QAAS,gmJZ,EACD,CACI,QAAS,gkKZ,EACD,CACI,QAAS,sDACT,QAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAoBZ,EACD,CACI,QAAS,sDACT,QAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAuBZ,EACD,CACI,QAAS,wDACT,QAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAiFZ,EACD,CACI,QAAS,8DACT,QAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAsFZ,CACJ,CACL"}