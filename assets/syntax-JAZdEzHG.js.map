{"version":3,"file":"syntax-JAZdEzHG.js","sources":["../../src/dataBase/syntax.js"],"sourcesContent":["export default {\r\n    title: \"Синтаксис\",\r\n    navTitle: \"Синтаксис\",\r\n    id: \"syntax\",\r\n    items: [\r\n        {\r\n            summary: \"Методы импорта Vite\",\r\n            content: \"1. ?worker\\n\" +\r\n                \"\\n\" +\r\n                \"Позволяет импортировать файл как Web Worker.\\n\" +\r\n                \"\\n\" +\r\n                \"const worker = new Worker(new URL('./worker.js', import.meta.url), { type: 'module' });\\n\" +\r\n                \"\\n\" +\r\n                \"2. ?inline\\n\" +\r\n                \"\\n\" +\r\n                \"    Преобразует содержимое файла в строку (работает для небольших ресурсов, например, SVG).\\n\" +\r\n                \"\\n\" +\r\n                \"import svgContent from './icon.svg?inline'; // svgContent содержит строку с SVG\\n\" +\r\n                \"\\n\" +\r\n                \"3. ?url\\n\" +\r\n                \"\\n\" +\r\n                \"    Импортирует путь к файлу, а не само содержимое.\\n\" +\r\n                \"\\n\" +\r\n                \"import imagePath from './image.png?url'; // imagePath содержит URL файла\\n\" +\r\n                \"\\n\" +\r\n                \"4. ?raw\\n\" +\r\n                \"\\n\" +\r\n                \"    Импортирует содержимое файла как строку (полезно для текстовых файлов, таких как .txt или .svg).\\n\" +\r\n                \"\\n\" +\r\n                \"import txtContent from './file.txt?raw'; // txtContent содержит строку с содержимым файла\\n\" +\r\n                \"\\n\" +\r\n                \"5. import.meta.glob\\n\" +\r\n                \"\\n\" +\r\n                \"    Динамический импорт всех файлов, соответствующих шаблону.\\n\" +\r\n                \"\\n\" +\r\n                \"const modules = import.meta.glob('./components/*.vue');\\n\" +\r\n                \"// modules — объект, где ключи — пути, а значения — функции импорта.\\n\" +\r\n                \"\\n\" +\r\n                \"6. import.meta.globEager\\n\" +\r\n                \"\\n\" +\r\n                \"    Импортирует все файлы сразу (без ленивой загрузки).\\n\" +\r\n                \"\\n\" +\r\n                \"const modules = import.meta.globEager('./data/*.js');\\n\" +\r\n                \"\\n\" +\r\n                \"7. ?jsx\\n\" +\r\n                \"\\n\" +\r\n                \"    Преобразует JSX-файлы. Полезно для случаев, если файл не имеет стандартного расширения .jsx:\\n\" +\r\n                \"\\n\" +\r\n                \"import MyComponent from './component-file.js?jsx';\\n\" +\r\n                \"\\n\" +\r\n                \"8. ?wasm\\n\" +\r\n                \"\\n\" +\r\n                \"    Импортирует WebAssembly (WASM) модули.\\n\" +\r\n                \"\\n\" +\r\n                \"import wasmModule from './module.wasm';\\n\" +\r\n                \"\\n\" +\r\n                \"9. ?module\\n\" +\r\n                \"\\n\" +\r\n                \"    Явно указывает, что файл должен быть обработан как модуль.\\n\" +\r\n                \"\\n\" +\r\n                \"import styles from './styles.css?module';\\n\" +\r\n                \"\\n\" +\r\n                \"10. ?asset\\n\" +\r\n                \"\\n\" +\r\n                \"    Преобразует файл в ассет, используемый для статических ресурсов.\\n\" +\r\n                \"\\n\" +\r\n                \"import assetUrl from './file.png?asset';\"\r\n        },\r\n        {\r\n          summary: 'css',\r\n          content: 'Единицы измерения:\\n' +\r\n              'px - в пикселях\\n' +\r\n              'em - от размера шрифта родителя\\n' +\r\n              'rem - от размера шрифты root (html)\\n' +\r\n              '% - от размера родителя\\n' +\r\n              'vw, vh - ширина, высота окна в процентах\\n' +\r\n              'dvw, dvh - динамичная ширина, высота окна в процентах (использовать на мобилках)\\n' +\r\n              'vmin, vmax - выбирают между высотой и шириной. vmin берет значение той стороны что меньше, vmax - что больше\\n' +\r\n              'ch - ширина цифры 0\\n' +\r\n              'ex - высота буквы x\\n' +\r\n              'cm,mm,in,pt,pc - обычно для печати используют. Это реальные размеры\\n\\n' +\r\n\r\n              'Цвета:\\n' +\r\n              'Даже в обычном hex формате можно указать прозрачность например #ffffff80 - белый с 80%' +\r\n              'rgb, rgba - rgb(red, green, blue), a - alpha (прозрачность)\\n' +\r\n              'hsl, hsla - hsl(hue - оттенок (0–360°, 0° = красный), saturation - насыщенность (0%–100%), lightness - яркость (0%–100%)), a - alpha (прозрачность)\\n' +\r\n              'currentColor - Наследует цвет текста. Например \"border: 2px solid currentColor;\"\\n\\n' +\r\n\r\n              'Фон:\\n' +\r\n              'background-image - изображение: url(\"image.jpg\"), либо градиент: linear-gradient(to right, red, blue); radial-gradient(circle, yellow, green); conic-gradient(red, yellow, green); \\n' +\r\n              'background-position - позиция фона: top, bottom, left, right, center; 50% 50% (по горизонтали/вертикали); 10px 20px\\n' +\r\n              'background-size - размер фона: auto исходный размер; cover заполняет всё пространство, обрезает фото; contain масштабирует чтобы влезло, не обрезает; 100px 200px\\n' +\r\n              'background-repeat - повторение фона: repeat по умолчанию, повторяется и по X, и по Y; no-repeat не повторяется; repeat-x, repeat-y повторение только по оси X/Y\\n' +\r\n              'background-clip - до куда показать фон: border-box до границы включая border; padding-box до padding, border прозрачный; content-box только для содержимого\\n' +\r\n              'background-origin - точка отсчета дял фона: border-box от границы; padding-box от padding, border прозрачный; content-box от содержимого\\n' +\r\n              'background-attachment - фиксирован ли фон при прокрутке: scroll - дефолт; fixed - параллакс, прилип к экрану; local - фон движется только если прокручивается лично блок с фоном, работает с overflow\\n\\n' +\r\n              'Сокращённая запись всех свойств - background: url(\"img.jpg\") no-repeat center/cover fixed; что означает: \\n' +\r\n              'background-image: url(\"img.jpg\");\\n' +\r\n              'background-repeat: no-repeat;\\n' +\r\n              'background-position: center;\\n' +\r\n              'background-size: cover;\\n' +\r\n              'background-attachment: fixed;\\n\\n' +\r\n\r\n              'Текст:\\n' +\r\n              'font-family - определяет шрифт, можно указать несколько через запятую а браузер возьмет первый доступный\\n' +\r\n              'font-weight - от 100 тонкого до 900 толстого; normal = 400 (обычный); bold = 700 (жирный)\\n; lighter — легче родительского; bolder — жирнее родительского' +\r\n              'font-style - наклон: normal дефолт; italic курсив, часто отдельный файл шрифта; oblique наклон текста без отдельного шрифта (буквы наклоняются программно)\\n' +\r\n              'font-variant - варианты: normal дефолт; small-caps маленькие заглавные буквы (не трогает уже заглавные, только строчные); all-small-caps все буквы маленькие заглавные; oldstyle-nums цифры старого стиля; lining-nums цифры в линию; tabular-nums цифры фиксированной ширины\\n' +\r\n              'line-height - высоат строки: разные значения, но можно например 1.5 без единицы измерения и будет относительно размера шрифта\\n' +\r\n              'letter-spacing - расстояние между буквами: normal - дефолт\\n' +\r\n              'word-spacing - расстояние между словами: normal - дефолт\\n' +\r\n              'text-align - горизонтальное выравнивание текста: left, right, center, justify (по ширине блока), start, end\\n' +\r\n              'text-decoration - оформление: none без подчеркивания; underline подчеркнутый; overline линия сверху; line-through зачеркнутый. Можно сразу несколько значений\\n' +\r\n              'text-transform - регистр: none дефолт; uppercase все заглавные; lowercase все строчные; capitalize первая буква каждого слова заглавная\\n' +\r\n              'text-indent - отступ первой строки\\n' +\r\n              'white-space - пробелы и переносы браузером: normal дефолт; nowrap запрещено переносить; pre сохраняет все пробелы и переносы; pre-wrap переносы по словам + сохранение пробелов; pre-line переносы по словам, пробелы сжимаются\\n' +\r\n              'word-wrap / overflow-wrap - перенос длиннх слов (word-wrap мы не используем это старый синтаксис): normal дефолт; break-word длинные слова разрываются, чтобы не выходили за блок\\n' +\r\n              'direction - направление текста: ltr дефолт; rtl справа налево\\n' +\r\n              'unicode-bidi - \\n\\n' +\r\n\r\n              'Border:\\n' +\r\n              'border-width - thin тонкая линия; medium средняя толщина; thick толстая линия;\\n' +\r\n              'border-color - transparent невидимый но занимает место; currentColor берет цвет текста;\\n' +\r\n              'border-style - none дефолт; solid сплошная; dotted точечная с круглыми; dashed пунктирная; double двойная сплошная; groove типа впадина; ridge наоборот типа выступ; inset как будто бы жлемент вдавлен в сайт; outset как будто элемент выступает;\\n' +\r\n              'Рельефные (groove, ridge, inset, outset) используют цвет рамки для расчёта светлых и тёмных оттенков, поэтому они зависят от border-color\\n\\n' +\r\n\r\n              'Display:\\n' +\r\n              'block - занимает всю ширину, например div или p такой\\n' +\r\n              'inline - занимает только свою ширину, например span\\n' +\r\n              'inline-block - гибрид, то же что и inline но можно задать ширину и высоту\\n' +\r\n              'flex - элементы флексят\\n' +\r\n              'inline-flex - тоже флексят, но контейнер не занимает всю ширину\\n' +\r\n              'grid - сетка типа\\n' +\r\n              'inline-grid - сетка с inline контейнером\\n' +\r\n              'none - элемент не существует\\n' +\r\n              'list-item - элемент теперь пункт списка, добавляет маркер или номер как у li например\\n' +\r\n              'table - ведет себя как <table>\\n' +\r\n              'inline-table - тот же table но inline\\n\\n' +\r\n\r\n              'Table (таблица):\\n' +\r\n              'table-layout - управление шириной колонок: auto подстраивается под содержимое; fixed равномерное распределение ширины, игнорируя содержимое (быстрее рендерится)\\n' +\r\n              'vertical-align - выравнивает конетнт, работает с table-cell: top по верху; middle центру, дефолт; bottom снизу; baseline линия текста соседних ячеек; sub 2 в H₂O; super 2 в x²; text-top, text-bottom верх, низ текста относительно шрифта строки\\n' +\r\n              'caption-side - для table-caption: top, bottom\\n' +\r\n              'border-collapse - взаимодействие границ: collapse границы ячеек сливаются в одну; separate границы остаются отдельным, можео использовать border-spacing\\n' +\r\n              'border-spacing - задает расстояние между ячейками\\n' +\r\n              'empty-cells - видимость пустых ячеек: show, hide' +\r\n              'Дисплеи:\\n' +\r\n              'table-row - то же что и <tr>, ряд таблицы\\n' +\r\n              'table-cell - то же что и <td>, ячейка таблицы, автоматически подстраивается по высоте, по умолчанию vertical-align: middle.\\n' +\r\n              'table-caption - то же что и <caption>, заголовок, отображается над или под таблицей, зависит от caption-side\\n' +\r\n              'table-column - то же что и <col>, для задания стилей например цвет, ширина. Не создает ячейку, только стилизует\\n' +\r\n              'table-column-group - то же что и <colgroup>, группировко колонок\\n' +\r\n              'table-row-group - то же что и <tbody>, группировка рядов\\n' +\r\n              'table-header-group - то же что и <thead>, заголовочная группа рядов\\n' +\r\n              'table-footer-group - то же что и <tfoot>, нижняя группа рядов\\n' +\r\n\r\n              'Видимость:\\n' +\r\n              'visibility - visible дефолт; hidden невидимый но занимает место; collapse для таблиц: скрывает элемент и убирает его место\\n' +\r\n              'opacity - от 0 до 1\\n\\n' +\r\n\r\n\r\n\r\n              'Остальное:\\n'\r\n        },\r\n    ]\r\n}"],"names":["syntax"],"mappings":"AAAA,MAAeA,EAAA,CACX,MAAO,YACP,SAAU,YACV,GAAI,SACJ,MAAO,CACH,CACI,QAAS,sBACT,QAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCA4DZ,EACD,CACE,QAAS,MACT,QAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CA6FV,CACJ,CACL"}