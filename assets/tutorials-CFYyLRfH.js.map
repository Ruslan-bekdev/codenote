{"version":3,"file":"tutorials-CFYyLRfH.js","sources":["../../src/dataBase/tutorials.js"],"sourcesContent":["export default {\r\n    title: \"Туториалы\",\r\n    navTitle: \"Туториалы\",\r\n    id: \"tutorials\",\r\n    items: [\r\n        {\r\n            summary: \"Создание гитхаб проекта\",\r\n            content: \"создать репозиторий в гитхабе\\n\" +\r\n                \"выбираем будет ли репозиторий приватным или публичным\\n\" +\r\n                \"\\n\" +\r\n                \"сначало создай основу проекта, например vite или react\\n\" +\r\n                \"а потом уже инициализируй через git init\\n\" +\r\n                \"подключить проект в репозиторий через команду\\n\" +\r\n                \"git remote add origin https://github.com/Ruslan-bekdev/codenote (ссылку свою)\\n\" +\r\n                \"\\n\" +\r\n                \"git branch -M main чтобы переименовать текущую ветвь в мейн\\n\" +\r\n                \"git push -u origin main при первом пуше\"\r\n        },\r\n        {\r\n            summary: \"Создание React проекта и первичная настройка\",\r\n            content: \"npx create-react-app . --template typescript (в конце это если прорект будет тайпскрипт)\\n\" +\r\n                \"\\n\" +\r\n                \"удаляем лишнее\\n\" +\r\n                \"в папке public\\n\" +\r\n                \"favicon.ico\\n\" +\r\n                \"/правки в index.html, /\\n\" +\r\n                \"logo192.png\\n\" +\r\n                \"/правки в index.html, /\\n\" +\r\n                \"logo512.png\\n\" +\r\n                \"manifest.json (это для проектов PWA то есть типо приложений. Для сайтов не нужен)\\n\" +\r\n                \"/правки в index.html, /\\n\" +\r\n                \"\\n\" +\r\n                \"в папке src\\n\" +\r\n                \"очищаем App.css\\n\" +\r\n                \"App.test.tsx (файл для тестов. Если тесты не планируются удаляем)\\n\" +\r\n                \"Очищаем App и переделываем в стрелочную функцию\\n\" +\r\n                \"reportWebVitals.ts (отслеживание производительности)\\n\" +\r\n                \"/index.tsx/\\n\" +\r\n                \"setupTests.ts (для тестов)\\n\" +\r\n                \"logo.svg\"\r\n        },\r\n        {\r\n            summary: \"Создание Vite проекта и первичная настройка\",\r\n            content: \"VITE\\n\" +\r\n                \"npm create vite@latest .\\n\" +\r\n                \"команда запуска: npm run dev\\n\" +\r\n                \"\\n\" +\r\n                \"добавляем плагин\\n\" +\r\n                \"Создай vite.config.js и добавь туда\\n\" +\r\n                \"import Inspect from 'vite-plugin-inspect';\\n\" +\r\n                \"\\n\" +\r\n                \"export default {\\n\" +\r\n                \"    plugins: [\\n\" +\r\n                \"        Inspect(),\\n\" +\r\n                \"    ]\\n\" +\r\n                \"}\\n\" +\r\n                \"Чтобы включить плагин надо перезапустить хостинг\\n\" +\r\n                \"\\n\" +\r\n                \"Удаляем лишнее\\n\" +\r\n                \"В папке public\\n\" +\r\n                \"удаляем vite.svg\\n\" +\r\n                \"\\n\" +\r\n                \"В папке src\\n\" +\r\n                \"очищаем main.js\\n\" +\r\n                \"удаляем counter.js\\n\" +\r\n                \"удаляем javascript.svg\\n\" +\r\n                \"очищаем style.css\"\r\n        },\r\n        {\r\n            summary: 'Деплой на Гитхаб пейджес',\r\n            content: '1.Первичный деплой\\n' +\r\n                'Настройки-pages:\\n' +\r\n                'Выбрать главную ветвь и сейв\\n' +\r\n                'Скопировать ссылку которая появится\\n' +\r\n                '\\n' +\r\n                '2.Настройка проекта\\n' +\r\n                'Пекейдж Джейсон:\\n' +\r\n                'Добавить homepage и указать ему скопированную ссылку\\n' +\r\n                'npm i gh-pages\\n' +\r\n                'В scripts прописать следующие ключи\\n' +\r\n                '\"deploy\": \"gh-pages -d build\",\\n' +\r\n                '\"predeploy\": \"npm run build\"\\n' +\r\n                'Закомитить все и запушить\\n' +\r\n                '\\n' +\r\n                '3.Деплой\\n' +\r\n                'npm run deploy\\n' +\r\n                'Настройка-pages:\\n' +\r\n                'Поменять ветвь на gh-pages\\n' +\r\n                'Подождать\\n' +\r\n                '\\n' +\r\n                'Замечания!\\n' +\r\n                'Если в проекте есть Браузер Роутер, то:\\n' +\r\n                'в элемент BrowserRouter из index.js надо добавить селектор basename={process.env.PUBLIC_URL',\r\n        },\r\n        {\r\n            summary: 'Деплой на Гитхаб пейджес vite vanilla js проекта',\r\n            content: '1.Первичный деплой\\n' +\r\n                'Настройки-pages:\\n' +\r\n                'Выбрать главную ветвь и сейв\\n' +\r\n                'Скопировать ссылку которая появится\\n' +\r\n                '\\n' +\r\n                '2.Настройка проекта\\n' +\r\n                'npm i gh-pages\\n' +\r\n                'В scripts прописать следующие ключи после ключа \"dev\"\\n' +\r\n                '\"deploy\": \"gh-pages -d dist\",\\n' +\r\n                '\"predeploy\": \"npm run build\"\\n' +\r\n                'указать в файле vite.config.js ключ base с ссылкой в значении (если такого файла нет - создать)\\n' +\r\n                'Например так' +\r\n                'base: \\'https://ruslan-bekdev.github.io/codenote/\\',\\n' +\r\n                'В итоге должно быть так import { defineConfig } from \\'vite\\';\\n' +\r\n                '\\n' +\r\n                'export default defineConfig({\\n' +\r\n                '    root: \\'./\\',\\n' +\r\n                '    base: \\'https://ruslan-bekdev.github.io/codenote/\\',\\n' +\r\n                '    build: {\\n' +\r\n                '        outDir: \\'dist\\',\\n' +\r\n                '        sourcemap: true,\\n' +\r\n                '    },\\n' +\r\n                '    server: {\\n' +\r\n                '        port: 3000,\\n' +\r\n                '    },\\n' +\r\n                '});\\n' +\r\n                'Закомитить все и запушить\\n' +\r\n                '\\n' +\r\n                '3.Деплой\\n' +\r\n                'npm run deploy\\n' +\r\n                'Настройка-pages:\\n' +\r\n                'Поменять ветвь на gh-pages\\n' +\r\n                'Подождать'\r\n        },\r\n        {\r\n          summary: 'Установка JetBrains программ и обход лицензии',\r\n          content: 'Установить с нуля свежий редактор\\n' +\r\n              'Перейти на сайт https://3.jetbra.in\\n' +\r\n              'Перейти на любой онлайн сервер\\n' +\r\n              'Установить архив, показавшийся сверху сайта jetbra.zip\\n' +\r\n              'Распаковать, scripts > install-all-users.vbs\\n' +\r\n              'Нажать Ок и подождать пока не выйдет окно Done\\n' +\r\n              'Запускаем редактор, нажимаем активейт, активейшн код\\n' +\r\n              'На сайте находим нужный редактор и копируем ключ\\n' +\r\n              'Вставляем в редактор поле для кода и нажимаем активейт\\n'\r\n        },\r\n        {\r\n          summary: 'Реализация хашированного пароля на сайт (средняя защита. Опытные кодеры легко взломают)',\r\n          content: 'Создаем js файл и пишем туда\\n' +\r\n              'import bcrypt from \"bcryptjs\";\\n' +\r\n              '\\n' +\r\n              'const storedHash = \"СЮДА СВОЙ ХЕШ\";\\n' +\r\n              '\\n' +\r\n              'function authenticateUser() {\\n' +\r\n              '    const userPassword = prompt(\"Введите пароль для доступа:\");\\n' +\r\n              '\\n' +\r\n              '    if (!userPassword) {\\n' +\r\n              '        document.body.innerHTML = \"<h1>Доступ запрещен</h1>\";\\n' +\r\n              '        return;\\n' +\r\n              '    }\\n' +\r\n              '\\n' +\r\n              '    const isMatch = bcrypt.compareSync(userPassword, storedHash);\\n' +\r\n              '\\n' +\r\n              '    if (isMatch) {\\n' +\r\n              '        alert(\"Пароль верный! Добро пожаловать.\");\\n' +\r\n              '    } else {\\n' +\r\n              '        alert(\"Неверный пароль! Доступ запрещен.\");\\n' +\r\n              '        document.body.innerHTML = \"<h1>Доступ запрещен</h1>\";\\n' +\r\n              '    }\\n' +\r\n              '}\\n' +\r\n              '\\n' +\r\n              'Откуда взять Хеш?\\n' +\r\n              'выполняем npm i bcryptjs\\n' +\r\n              'выполняем команду node и втсавляем туда это:\\n' +\r\n              'export default authenticateUser;' +\r\n              'npm install bcryptjs\\n' +\r\n              'const bcrypt = require(\"bcryptjs\");\\n' +\r\n              'const password = \"ПАРОЛЬ СЮДА СВОЙ\";\\n' +\r\n              'bcrypt.hash(password, 10, function (err, hash) {\\n' +\r\n              '  console.log(\"Хэш пароля:\", hash);\\n' +\r\n              '});\\n' +\r\n              'Он даст хеш, который и нужно вставить в созданный js файл\\n' +\r\n              'Затем создаем другой js файл и вставляем туда\\n' +\r\n              'import authenticateUser from \"./ТОТ САМЫЙ ПЕРВЫЙ JS ФАЙЛ.js\";\\n' +\r\n              '\\n' +\r\n              'document.addEventListener(\"DOMContentLoaded\", () => {\\n' +\r\n              '    authenticateUser();\\n' +\r\n              '});\\n' +\r\n              '\\n' +\r\n              'Если нужно изменить пароль, то просто меняем его и вставляем в node, меняя хеш'\r\n        },\r\n        {\r\n            summary: 'Переменные в ванильном CSS',\r\n            content: ':root {\\n' +\r\n                '    --example-var-name: \"example value\";\\n' +\r\n                '    --exampleVarName: \"example value\"\\n' +\r\n                '}\\n' +\r\n                '\\n' +\r\n                '.exampleClassname {\\n' +\r\n                '    color: var(--example-var-name);\\n' +\r\n                '    background-color: var(--exampleVarName);\\n' +\r\n                '}'\r\n        },\r\n        {\r\n            summary: 'Сочетание клавиш',\r\n            content: 'Ctrl + Shift + F или Shift * 2\\n' +\r\n                'Поиск по коду проекта\\n' +\r\n                'Ctrl + Shift + Alt + J\\n' +\r\n                'Выделить сразу много текста'\r\n        }\r\n    ]\r\n};"],"names":["tutorials"],"mappings":"AAAA,MAAeA,EAAA,CACX,MAAO,YACP,SAAU,YACV,GAAI,YACJ,MAAO,CACH,CACI,QAAS,0BACT,QAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAUb,EACA,CACI,QAAS,+CACT,QAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAoBb,EACA,CACI,QAAS,8CACT,QAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAwBb,EACA,CACI,QAAS,2BACT,QAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4FAuBb,EACA,CACI,QAAS,mDACT,QAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAiCb,EACA,CACE,QAAS,gDACT,QAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CASX,EACA,CACE,QAAS,0FACT,QAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+EA0CX,EACA,CACI,QAAS,6BACT,QAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASb,EACA,CACI,QAAS,mBACT,QAAS;AAAA;AAAA;AAAA,4BAAA,CAIb,CAER"}